{
    "openapi": "3.0.0",
    "info": {
        "title": "USer.Uz",
        "description": "Joy VoyagerApi module adds REST Api end points to Voyager with Passport and Swagger support https:\/\/github.com\/rxcod9\/joy-voyager-api.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/dev.user.uz",
            "description": "Primary API Server"
        },
        {
            "url": "https:\/\/user.uz",
            "description": "Another API Server"
        }
    ],
    "paths": {
        "\/api\/blog-news": {
            "get": {
                "tags": [
                    "Blog News"
                ],
                "summary": "Blogs",
                "operationId": "3b7ff65ea7f758f5cd712df2a0e2ed2f",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/blog-news\/{blogNew}": {
            "get": {
                "tags": [
                    "Blog News"
                ],
                "summary": "Blogs",
                "operationId": "d903254e072b5efc2e7e395a3340c9e8",
                "parameters": [
                    {
                        "name": "blogNew",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/categories": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "Get list of Category",
                "operationId": "f923daf680ac66deb18bd56437ca2a23",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/popular-categories": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "Popular categories",
                "operationId": "1a11cd9bd17ab12cfcd763ebd95993fb",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/category\/search": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "Search Category by name",
                "operationId": "c177ab8a25cbaa55ef98e7ebdbc848a7",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/categories-parent": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "Get All Categories",
                "operationId": "e8afb8bb1052e6310214fc871fcbe225",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/categories\/{id}": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "Get category by show ID",
                "operationId": "87e7cd6fb3ae11d4904e035f70299857",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/all-categories-childs": {
            "get": {
                "tags": [
                    "CategoryAPI"
                ],
                "summary": "All Categories Childs Id",
                "operationId": "b1a0a63bc4bb39a960198eeac9a45eaf",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "faqs",
                "operationId": "57c4fa7ceebfb20a59c69528a9a7067e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/faq\/{faq_id}": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "faqs id",
                "operationId": "0f07137332016dcec2fdfb90dda6102a",
                "parameters": [
                    {
                        "name": "faq_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/settings\/get-all": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "setting all",
                "operationId": "f7ca8adc84c1dcad0668ef47ae66d2c9",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/settings\/{key}": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "setting key",
                "operationId": "1d06abedf33b9519a93b56cb564f43df",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/account\/verify": {
            "get": {
                "tags": [
                    "Verification"
                ],
                "summary": "Verify account",
                "operationId": "8787a513ac7945b24e6123d90215b324",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "email yoki phone_number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "email yoki phone_number qiymati",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/account\/verification\/phone": {
            "post": {
                "tags": [
                    "Verification"
                ],
                "summary": "Verification phone",
                "operationId": "3fe3e97c01c6204997ab62e7f3323789",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/account\/verification\/email": {
            "post": {
                "tags": [
                    "Verification"
                ],
                "summary": "Verification email",
                "operationId": "f36c8a03fbc01724dbd41ebae6666cf1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/performers": {
            "get": {
                "tags": [
                    "Performers"
                ],
                "summary": "Get All Performers",
                "operationId": "027b7e9a6cbc132daad2697f1621a24d",
                "parameters": [
                    {
                        "name": "online",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/performers-filter": {
            "get": {
                "tags": [
                    "Performers"
                ],
                "summary": "Performers Filter",
                "operationId": "7ddc065fff9fd7ac64fe0157f29d04dd",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "child_categories",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "online",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "alphabet",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "review",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "desc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "asc",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/give-task": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Give task by task ID and perfomer ID",
                "operationId": "0e31576c4838d8c9e29c2b0bcee2c3d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "performer_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/become-performer": {
            "post": {
                "tags": [
                    "Become a perfomer"
                ],
                "summary": "Initial Data",
                "operationId": "fe1fd424a52f6bd274c86a35afdb3af3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    },
                                    "born_date": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/become-performer-phone": {
            "post": {
                "tags": [
                    "Become a perfomer"
                ],
                "summary": "Email and phone",
                "operationId": "4e36926672cf6bed00d3fb3ef9dfd4a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/become-performer-avatar": {
            "post": {
                "tags": [
                    "Become a perfomer"
                ],
                "summary": "Avator",
                "operationId": "a6e205e8c105f40204264bda896100e3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/become-performer-category": {
            "post": {
                "tags": [
                    "Become a perfomer"
                ],
                "summary": "Categories",
                "operationId": "8623a4ddae7b115758739689a990bac0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews": {
            "get": {
                "tags": [
                    "Performers"
                ],
                "summary": "Performer reviews",
                "operationId": "39fe6b6c9cc58a3d62c2fcc1afb079a5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/performers-count\/{category_id}": {
            "get": {
                "tags": [
                    "Performers"
                ],
                "summary": "Performer count",
                "operationId": "c60990f1f4df8d7dd40bd56accb91bf8",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/performers-image\/{category_id}": {
            "get": {
                "tags": [
                    "Performers"
                ],
                "summary": "Performer image",
                "operationId": "121025c8201c775d9c1ce8c52e609a79",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile index",
                "operationId": "19ddc09c48f45c607be87bb06f16e8e5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/portfolios": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile portfolios",
                "operationId": "b08af21d9d4afac7fda0837d32bed96a",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/portfolio\/create": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Portfolio Create",
                "operationId": "c316161132765a3101ed0f60d41eb4b0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "images": {
                                        "type": "file"
                                    },
                                    "comment": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/portfolio\/{portfolio}\/delete": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete Portfolio",
                "operationId": "3411ccc81d6cb44d1272bb437de49340",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/portfolio\/{portfolio}\/update": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Portfolio Update",
                "operationId": "6758dab46aaff08b0a2c1941a644db24",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/video": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile Video Store",
                "operationId": "875497f3ddebc235c38fec2108481b13",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "link": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/video\/delete": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile video delete",
                "operationId": "8fa2ad0b628f81d0a4f380ca2c372b98",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/reviews": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile reviews",
                "operationId": "c02ca91f7f8ebd758830ee20374f4359",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/balance": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile balance",
                "operationId": "ffb780005820a138a39000733724063e",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "in yoki out kiritiladi",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "month, week yoki year kiritiladi",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "boshlang'ich vaqti kiritiladi(2022-11-01  shu formatda)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "oxirgi vaqti kiritiladi(2022-12-01  shu formatda)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/phone": {
            "get": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Phone",
                "operationId": "a3ac77aaf9402239a257a48f9d80bfbd",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/phone\/edit": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Phone edit",
                "operationId": "8a03e4fd8a84f96e1588b87a09233f57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "phone_number": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/password\/change": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Change password",
                "operationId": "dc0486c41591cf176514f18ee69fce2e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/change-avatar": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Change Avator",
                "operationId": "0eed7901dca85c5175305075ba95f121",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "avatar": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/update": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Update settings",
                "operationId": "827c0d8a45f51d307cc762dd318efd27",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1 yoki 0",
                                        "type": "integer"
                                    },
                                    "born_date": {
                                        "description": "2022-06-03 - manashu formatda kiritiladi",
                                        "type": "string"
                                    },
                                    "age": {
                                        "type": "integer"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "location": {
                                        "description": "Bo`sh qoldirsa boladi",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings": {
            "get": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Your profile data",
                "operationId": "149dc7b997029ed7e11d952595dd9023",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/description\/edit": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile edit description",
                "operationId": "0f09bde9de7481991dbfc16f79d4bc68",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/notifications": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Profile edit news notifications",
                "operationId": "895f5a03086cd836dad741774d397045",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "notification": {
                                        "description": "0 yoki 1 kiritiladi, 0 bo'lsa o'chiriladi, 1 bo'lsa yoqiladi",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get Profile By ID",
                "operationId": "62efd8334f3e8c1a8cab4873f37ff991",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/profile\/{user}\/portfolios": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "User Portfolios",
                "operationId": "661f056cfbfce5a26b547cfce303e0f1",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/profile\/{user}\/reviews": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "User Reviews",
                "operationId": "8388b31fa583afb948fcf3b06da0cad0",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/profile\/categories-subscribe": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Category subscribe",
                "operationId": "ed40fa4dc77c64d3c7eec3ca05bd6c49",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "sms_notification": {
                                        "type": "integer"
                                    },
                                    "email_notification": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/settings\/change-lang": {
            "post": {
                "tags": [
                    "Profile Settings"
                ],
                "summary": "Change lang",
                "operationId": "191e78550fc415c74b5e6074f70b6c35",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "lang": {
                                        "description": "ru yoki uz",
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/self-delete": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Self delete",
                "operationId": "7dc0f630957b354ddd34abcf6e8485df",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/confirmation-self-delete": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Confirmation self delete",
                "operationId": "d772f044c8eb16987d7aac64b23149a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "confirmation code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/report-user": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Report user",
                "operationId": "a6eef80807926aa7db5e178e24a565f7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "reported_user_id": {
                                        "description": "Reported user id",
                                        "type": "string"
                                    },
                                    "message": {
                                        "description": "Report message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/block-user": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Block user",
                "operationId": "c7b81d487d2c5f4060e59cd029263ad7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "blocked_user_id": {
                                        "description": "Blocked user id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/block-user-list": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Block user list",
                "operationId": "d7e103dcdbc5cc19f9c19caee50813eb",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/portfolio\/{portfolio}\/delete-image": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile delete image",
                "operationId": "c29e7a7f6d2e915b569038d403785376",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Ozodbek\/1675856445_image_2023-02-07_11-00-21.png shunday ko'rinishda img url kiritiladi",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/work-experience": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile work experience",
                "operationId": "ebe7949259ef86002b5b0908cb65b370",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "work_experience": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/response-template": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile response template",
                "operationId": "5f3561c0ad90709e4b6a1017b66dae31",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/response-template\/edit\/{id}": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile response template edit",
                "operationId": "1df9530c95e4729823ef9fcf6e598541",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/response-template\/create": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile response template create",
                "operationId": "1fb698eaa7f9eef2e57fe3f956ced1e3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/response-template\/delete\/{id}": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile response template delete",
                "operationId": "d0a01694396e01739660d94ef7bb2c6b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/notification-off": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Notification on or off",
                "operationId": "49284b654f05cb73ab86cf158a0069e9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "notification_off": {
                                        "description": "0 yoki 1, 0 bo'lsa yoqish, 1 bo'lsa o'chirish",
                                        "type": "integer"
                                    },
                                    "notification_to": {
                                        "type": "string"
                                    },
                                    "notification_from": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/cancel-task\/{task}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Cancel task",
                "operationId": "fed267bec0a8895ac584aa2122fa66d1",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/delete-task\/{task}\/{user}": {
            "delete": {
                "tags": [
                    "Task"
                ],
                "summary": "Delete Task",
                "operationId": "74f9f577251b9eb63b150a1dfb7764bd",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-cancel\/{task}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Task Cancel",
                "operationId": "8b7e63ad7248256f80ed003f7c499fac",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/sessions": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get all sessions",
                "operationId": "0e6aca50933f7d4e8ab544ae8cc5f298",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/profile\/clear-sessions": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Clear sessions without current session",
                "operationId": "d4fee904baed9a7e54d6501e3da45fa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "session_id": {
                                        "description": "Current session id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/social-login": {
            "post": {
                "tags": [
                    "Socials"
                ],
                "summary": "Socials Google and Facebook",
                "operationId": "35999b01d9fe87e696c04c8f0c0ab6be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "google",
                                            "facebook",
                                            "apple"
                                        ]
                                    },
                                    "access_token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/same-tasks\/{task}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Same tasks by Task ID",
                "operationId": "120ccd09ca7a2be2153ee7a0f2655447",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/responses\/{task}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Response tasks",
                "operationId": "e40467954638499de8484738d2359d0c",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task\/{task}\/response": {
            "post": {
                "tags": [
                    "Responses"
                ],
                "summary": "Send Response",
                "operationId": "72b3712b916c380767bb13875dd42339",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "not_free": {
                                        "description": "0 - bepul, 1 - pullik",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/select-performer\/{response}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Select performer",
                "operationId": "9dd3e944aa88b5922c3327499f09f3d5",
                "parameters": [
                    {
                        "name": "response",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-status-update\/{task}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Cancel Status Open",
                "operationId": "79d9075a6ad30708fa4006689a779a3c",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks-filter": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Task filter",
                "operationId": "01811c7639caa6a28b67d031f8c8be43",
                "parameters": [
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "[2,3,7] - manashu formatda kiritiladi",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "child_categories",
                        "in": "query",
                        "description": "[23,24,25] - manashu formatda kiritiladi",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "long",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "budget",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_remote",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "without_response",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "difference",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "s",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/task\/{task}": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Task By ID",
                "operationId": "f81261f5febbe5e9edecf62e8b165e8f",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/user\/{user}": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "User active task and step null",
                "operationId": "af0b037eafa1da0e41f83607558c4686",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/my-tasks-count": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get My Tasks Count",
                "operationId": "72718dc806703c197699e0f060cb0935",
                "parameters": [
                    {
                        "name": "is_performer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/my-tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get My Tasks",
                "operationId": "1a716f0c34b249580b5d4194baa5f168",
                "parameters": [
                    {
                        "name": "is_performer",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/name": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create name",
                "operationId": "2b3304f727d506c6f5e2b2f18620fad4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Taskning nomi kiritiladi",
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "description": "Category id yoziladi (faqat parent_idsi bor bo'lishi kerak)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/custom": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create custom",
                "operationId": "b3c4b3eed494f92d6f21515814270c5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/remote": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create remote",
                "operationId": "f63a7fc1a92d1ac0de6a19861ed0ff02",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "radio": {
                                        "description": "Agar udallonna bolsa - remote, manzil bo`yicha bo`lsa - address deb yozing",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/address": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create address",
                "operationId": "43ea22831bbc2e1f7f952dd6d595d686",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "points[]": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "location": {
                                                    "type": "string"
                                                },
                                                "latitude": {
                                                    "type": "number"
                                                },
                                                "longitude": {
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/date": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create date",
                "operationId": "2c0799ac97b6e370ccf3fd2c7b950543",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "date_type": {
                                        "description": "1 dan 3 gacha bersa bo`ladi",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "2022-06-03 12:00:0 - manashu formatda kiritiladi",
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "description": "2022-06-03 12:00:0 - manashu formatda kiritiladi",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/budget": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create budget",
                "operationId": "d549c5a1835dd9e9de6fc88580c9a09b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "description": "Narxi",
                                        "type": "number"
                                    },
                                    "budget_type": {
                                        "description": "Naqt yoki plastik (0 yoki 1)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/note": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create note",
                "operationId": "2f27920cad19f7e030fad94789966187",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "docs": {
                                        "description": "true - 1, false - 0",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/images": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create images",
                "operationId": "0a245f8d9ae4a7502c9b42ba20ef460e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "images": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/contacts": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create contacts",
                "operationId": "02fdcf7814dd7330f8b8aee563d8c488",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/create-task\/verify": {
            "post": {
                "tags": [
                    "Task Create"
                ],
                "summary": "Task create verify",
                "operationId": "5c30ad02ae60c0326cff97b318c14178",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "phone_number": {
                                        "type": "integer"
                                    },
                                    "sms_otp": {
                                        "description": "Telefonga kelgan SMS code",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/name": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update name",
                "operationId": "01ba07b06489fb80b56b7d4ccd021d00",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/custom": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Update task custom fields",
                "operationId": "6d2ea2ac629840b489e9d8204435961d",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/remote": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update remote",
                "operationId": "b22dace447e9e3b5e97303692ce94035",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "radio": {
                                        "description": "Agar udallonna bolsa - remote, manzil bo`yicha bo`lsa - address deb yozing",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/address": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update address",
                "operationId": "e27a0257c8a292d549b1ba74b5cee07b",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "location": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/date": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update date",
                "operationId": "72daf2dbd3ef6c374439a5abe9dbf4c3",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "date_type": {
                                        "description": "1 dan 3 gacha bersa bo`ladi",
                                        "type": "integer"
                                    },
                                    "start_date": {
                                        "description": "2022-06-03 12:00:0 - manashu formatda kiritiladi",
                                        "type": "string"
                                    },
                                    "end_date": {
                                        "description": "2022-06-03 12:00:0 - manashu formatda kiritiladi",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/budget": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update budget",
                "operationId": "1bcbf434f63bd2bd250529afca61a8b2",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "amount": {
                                        "type": "number"
                                    },
                                    "budget_type": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/note": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update note",
                "operationId": "5d1f767fcba09f5ed34253c47068ae0c",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "docs": {
                                        "description": "true - 1, false - 0",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/images": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update images",
                "operationId": "4247b7515333190d9d6653f7cd641c9d",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "images": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/contacts": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update contacts",
                "operationId": "c3114b25878e38dec562d0d2b92ac7a2",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/verify": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task update verify",
                "operationId": "fccd8760adf34c624bcb308f3930f830",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "phone_number": {
                                        "type": "integer"
                                    },
                                    "sms_otp": {
                                        "description": "Telefonga kelgan SMS code",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/update-task\/{task}\/delete-image": {
            "post": {
                "tags": [
                    "Task Update"
                ],
                "summary": "Task delete images",
                "operationId": "2a8f5044c4abc87e2b72f0f990604c9f",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "images": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task\/{task}\/complain": {
            "post": {
                "tags": [
                    "Complains"
                ],
                "summary": "Task complain",
                "operationId": "e7c08bf1f346280ffd69969a4a72f3a1",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "compliance_type_id": {
                                        "type": "integer"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/complain\/types": {
            "get": {
                "tags": [
                    "Complains"
                ],
                "summary": "Task complains types",
                "operationId": "29df1bde5fe8cf5904bf08cf7e6701c5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/performer-tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Performer Tasks",
                "operationId": "54c6ff338336a06d5391292f6b93fa24",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/all-tasks": {
            "get": {
                "tags": [
                    "Task"
                ],
                "summary": "Get Performer all Tasks",
                "operationId": "94c194d04e8489c78ff39703aabab8be",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task\/{task}\/complete": {
            "post": {
                "tags": [
                    "Responses"
                ],
                "summary": "Complete Task",
                "operationId": "34274bcd311837ea8443d39da123d261",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{task}\/not-complete": {
            "post": {
                "tags": [
                    "Task"
                ],
                "summary": "Task status not complete",
                "operationId": "ed2c35b243bfe1419fb5c258046ee957",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "description": "Reason for cancel task",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/send-review-user\/{task}": {
            "post": {
                "tags": [
                    "Responses"
                ],
                "summary": "Complete task",
                "operationId": "f440159070ac0fc1e2b350969e9ad62d",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "type": "string"
                                    },
                                    "good": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reset": {
            "post": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Reset password by phone - sending code",
                "operationId": "56a1d9813d571e101444350e67d6dd7d",
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/reset\/password": {
            "post": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Enter a New password",
                "operationId": "235c0c336670eb4e95abc202257cb924",
                "parameters": [
                    {
                        "name": "phone_number",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/code": {
            "post": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Submit SMS code",
                "operationId": "3f40aa2d8aa65af2ec2afb498a175340",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "number"
                                    },
                                    "phone_number": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/support-admin": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Support admin",
                "operationId": "07cbce19d91b78bd9872333b4d9ead01",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/logout": {
            "post": {
                "tags": [
                    "UserAPI"
                ],
                "summary": "User logout",
                "operationId": "755cf3bc351a4bb58a6c9bce9f16e4fb",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications",
                "operationId": "955f0fc2425cb971c9b3bdd768fc2a04",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/read-notification\/{notification}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Read notifications",
                "operationId": "97f7d76ff0f0ea630efedcfc0a2c46ff",
                "parameters": [
                    {
                        "name": "notification",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/read-all-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Read all notifications",
                "operationId": "7c84847394b7aa6a32c8da6d91145a7e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/firebase-token": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Firebase token",
                "operationId": "c221d40772a6cf70fa55b76c08d8a03f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "device_id": {
                                        "type": "integer"
                                    },
                                    "device_name": {
                                        "type": "string"
                                    },
                                    "platform": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/count\/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Notifications count",
                "operationId": "3d76d779c655ce923cba405fca8b544b",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/firebase-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "firebase notification",
                "operationId": "ae12f93ac3a12733474d5cb1b7dcab91",
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "default",
                                        "enum": [
                                            "all",
                                            "role_user",
                                            "role_performer",
                                            "role_admin"
                                        ]
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pusher-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "pusher notification",
                "operationId": "78d456995f51e557e2c6db9d33d84464",
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "all",
                                            "role_user",
                                            "role_performer",
                                            "role_admin"
                                        ]
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/sms-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "sms notification",
                "operationId": "1907d00346f0f3ba2b2dad9288f434d8",
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "all",
                                            "role_user",
                                            "role_performer",
                                            "role_admin"
                                        ]
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/email-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "email notification",
                "operationId": "71fb7c6ac39ab2283ff730d62f27d6c2",
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "default": "",
                                        "enum": [
                                            "all",
                                            "role_user",
                                            "role_performer",
                                            "role_admin"
                                        ]
                                    },
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-create-notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "task create notification",
                "operationId": "1b0fc1e30dff527d7a609630748965f8",
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "body": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/test-complete-task\/{task}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "complete task notifications",
                "operationId": "c02ef5267610de872cffb373698bed46",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/test-delete-task\/{task}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "delete task notifications",
                "operationId": "3786573f53513f632a24c7919a153d49",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/test-cancel-task\/{task}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "cencel task notifications",
                "operationId": "59bd6d8203bb7f0522340f2f4dcac4c8",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/deleteConversation": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat Delete Conversation",
                "operationId": "47e07671140f9b20b82508ef4cd2de32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/sendMessage": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "",
                "operationId": "6d158f296101e86e16ec71247600a663",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/fetchMessages": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat Fetch Messages",
                "operationId": "bf77389bd76fc7884effb535b28e2615",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/makeSeen": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "",
                "operationId": "c078d17b4efaa29b1b8617a5600b8b52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/getContacts": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat getContacts",
                "operationId": "6fc0b9c90459b92cf96fc08bd002d613",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/chat\/search": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Chat search",
                "operationId": "09e094d028e9e617684e2ad093d9153b",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "operationId": "login",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/profile": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Profile",
                "operationId": "user",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#\/components\/schemas\/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/refreshToken": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "operationId": "refreshToken",
                "requestBody": {
                    "description": "Refresh Token",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "refresh_token"
                                ],
                                "properties": {
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "operationId": "register",
                "requestBody": {
                    "description": "User Register",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User 001"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user001@user.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "\/api\/users": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users index",
                "operationId": "users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "role_id",
                                "name",
                                "email",
                                "active_task",
                                "active_step",
                                "is_active",
                                "youtube_link",
                                "avatar",
                                "password",
                                "remember_token",
                                "settings",
                                "phone_number",
                                "api_token",
                                "device_token",
                                "notification_type",
                                "socails",
                                "location",
                                "views",
                                "last_name",
                                "g-recaptcha-response",
                                "google_id",
                                "facebook_id",
                                "messenger_color",
                                "dark_mode",
                                "active_status",
                                "description",
                                "district",
                                "is_email_verified",
                                "verify_code",
                                "verify_expiration",
                                "is_phone_number_verified",
                                "born_date",
                                "work_experience",
                                "email_old",
                                "phone_number_old",
                                "system_notification",
                                "news_notification",
                                "notification_off",
                                "notification_to",
                                "notification_from",
                                "version",
                                "last_seen",
                                "gender",
                                "sms_notification",
                                "email_notification",
                                "reviews",
                                "firebase_token",
                                "review_good",
                                "review_bad",
                                "review_rating",
                                "apple_id",
                                "updated_password_by",
                                "updated_password_at",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "user_belongsto_role_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active_task]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active_step]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[avatar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[role_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[phone_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[g-recaptcha-response]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[work_experience]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[born_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[version]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updated_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users store",
                "operationId": "users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/create": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users create",
                "operationId": "users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users show",
                "operationId": "users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users update",
                "operationId": "users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users delete",
                "operationId": "users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users single update",
                "operationId": "users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "email",
                                "password",
                                "avatar",
                                "role_id",
                                "user_belongsto_role_relationship",
                                "phone_number",
                                "g-recaptcha-response",
                                "description",
                                "work_experience",
                                "born_date",
                                "version"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "email",
                                    "password",
                                    "avatar",
                                    "role_id",
                                    "user_belongsto_role_relationship",
                                    "phone_number",
                                    "g-recaptcha-response",
                                    "description",
                                    "work_experience",
                                    "born_date",
                                    "version"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users edit",
                "operationId": "users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/relation": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users relation",
                "operationId": "users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users restore",
                "operationId": "users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus index",
                "operationId": "menus_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMenusBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus store",
                "operationId": "menus_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/create": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus create",
                "operationId": "menus_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus show",
                "operationId": "menus_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus update",
                "operationId": "menus_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus delete",
                "operationId": "menus_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus single update",
                "operationId": "menus_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus edit",
                "operationId": "menus_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/relation": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus relation",
                "operationId": "menus_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus restore",
                "operationId": "menus_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles index",
                "operationId": "roles_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "display_name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[display_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRolesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles store",
                "operationId": "roles_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/create": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles create",
                "operationId": "roles_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles show",
                "operationId": "roles_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles update",
                "operationId": "roles_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles delete",
                "operationId": "roles_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles single update",
                "operationId": "roles_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "id",
                                "name",
                                "display_name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "name",
                                    "display_name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles edit",
                "operationId": "roles_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/relation": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles relation",
                "operationId": "roles_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles restore",
                "operationId": "roles_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/create": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories create",
                "operationId": "categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories single update",
                "operationId": "categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "parent_id",
                                "name",
                                "custom_route_title",
                                "order",
                                "slug",
                                "ico",
                                "max",
                                "min",
                                "double_address",
                                "remote",
                                "deleted_by",
                                "updated_by",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parent_id",
                                    "name",
                                    "custom_route_title",
                                    "order",
                                    "slug",
                                    "ico",
                                    "max",
                                    "min",
                                    "double_address",
                                    "remote",
                                    "deleted_by",
                                    "updated_by",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories edit",
                "operationId": "categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/relation": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories relation",
                "operationId": "categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories restore",
                "operationId": "categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages index",
                "operationId": "pages_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "author_id",
                                "title",
                                "excerpt",
                                "body",
                                "image",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "INACTIVE",
                                    "ACTIVE"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPagesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages store",
                "operationId": "pages_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/create": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages create",
                "operationId": "pages_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages show",
                "operationId": "pages_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages update",
                "operationId": "pages_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages delete",
                "operationId": "pages_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages single update",
                "operationId": "pages_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "excerpt",
                                "body",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "image"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "excerpt",
                                    "body",
                                    "slug",
                                    "meta_description",
                                    "meta_keywords",
                                    "status",
                                    "image"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages edit",
                "operationId": "pages_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/relation": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages relation",
                "operationId": "pages_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages restore",
                "operationId": "pages_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom_fields index",
                "operationId": "custom_fields_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "title",
                                "type",
                                "required",
                                "data_type",
                                "regex",
                                "min",
                                "max",
                                "options",
                                "options_ru",
                                "values",
                                "category_id",
                                "route",
                                "order",
                                "description",
                                "placeholder",
                                "label",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "custom_field_belongsto_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[category_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[data_type][]",
                        "in": "query",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "",
                                    "string",
                                    "int",
                                    "double"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[required]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[regex]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[label]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[min]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[placeholder]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[max]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[route][]",
                        "in": "query",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "name",
                                    "address",
                                    "custom",
                                    "date",
                                    "budget",
                                    "notes",
                                    "contacts"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[values]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCustomFieldsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields store",
                "operationId": "custom-fields_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/create": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom_fields create",
                "operationId": "custom_fields_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields show",
                "operationId": "custom-fields_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields update",
                "operationId": "custom-fields_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields delete",
                "operationId": "custom-fields_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields single update",
                "operationId": "custom-fields_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "custom_field_belongsto_category_relationship",
                                "category_id",
                                "title",
                                "description",
                                "data_type",
                                "required",
                                "name",
                                "type",
                                "regex",
                                "label",
                                "min",
                                "placeholder",
                                "max",
                                "options",
                                "route",
                                "order",
                                "values",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "custom_field_belongsto_category_relationship",
                                    "category_id",
                                    "title",
                                    "description",
                                    "data_type",
                                    "required",
                                    "name",
                                    "type",
                                    "regex",
                                    "label",
                                    "min",
                                    "placeholder",
                                    "max",
                                    "options",
                                    "route",
                                    "order",
                                    "values",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields edit",
                "operationId": "custom-fields_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/relation": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields relation",
                "operationId": "custom-fields_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields restore",
                "operationId": "custom-fields_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks index",
                "operationId": "tasks_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "remote",
                                "date_type",
                                "start_date",
                                "end_date",
                                "budget",
                                "services",
                                "description",
                                "photos",
                                "show_only_to_performers",
                                "status",
                                "phone",
                                "category_id",
                                "performer_id",
                                "performer_review",
                                "oplata",
                                "user_id",
                                "coordinates",
                                "docs",
                                "go_back",
                                "views",
                                "responses_count",
                                "is_phone_verified",
                                "verify_code",
                                "verify_expiration",
                                "not_completed_reason",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "task_hasmany_custom_field_relationship",
                                "task_belongsto_service_relationship",
                                "task_belongsto_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[remote]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_type][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    2,
                                    3
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[start_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[end_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[budget]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[photos]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    3,
                                    4,
                                    5,
                                    6
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[phone]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_review]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[oplata]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[docs]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[views]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[responses_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_phone_verified]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[verify_code]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[not_completed_reason]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerTasksBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks store",
                "operationId": "tasks_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/create": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks create",
                "operationId": "tasks_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks show",
                "operationId": "tasks_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks update",
                "operationId": "tasks_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks delete",
                "operationId": "tasks_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks single update",
                "operationId": "tasks_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "remote",
                                "date_type",
                                "start_date",
                                "end_date",
                                "budget",
                                "description",
                                "photos",
                                "status",
                                "phone",
                                "category_id",
                                "performer_id",
                                "performer_review",
                                "task_hasmany_custom_field_relationship",
                                "oplata",
                                "user_id",
                                "task_belongsto_category_relationship",
                                "docs",
                                "views",
                                "responses_count",
                                "is_phone_verified",
                                "verify_code",
                                "verify_expiration",
                                "deleted_at",
                                "not_completed_reason"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "remote",
                                    "date_type",
                                    "start_date",
                                    "end_date",
                                    "budget",
                                    "description",
                                    "photos",
                                    "status",
                                    "phone",
                                    "category_id",
                                    "performer_id",
                                    "performer_review",
                                    "task_hasmany_custom_field_relationship",
                                    "oplata",
                                    "user_id",
                                    "task_belongsto_category_relationship",
                                    "docs",
                                    "views",
                                    "responses_count",
                                    "is_phone_verified",
                                    "verify_code",
                                    "verify_expiration",
                                    "deleted_at",
                                    "not_completed_reason"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks edit",
                "operationId": "tasks_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/relation": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks relation",
                "operationId": "tasks_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks restore",
                "operationId": "tasks_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/create": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications create",
                "operationId": "notifications_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications show",
                "operationId": "notifications_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications update",
                "operationId": "notifications_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotificationsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications delete",
                "operationId": "notifications_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications single update",
                "operationId": "notifications_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "user_id",
                                "service_id",
                                "notification_belongsto_user_relationship",
                                "task_id",
                                "notification_hasmany_service_relationship",
                                "cat_id",
                                "name_task",
                                "type",
                                "is_read",
                                "performer_id",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "user_id",
                                    "service_id",
                                    "notification_belongsto_user_relationship",
                                    "task_id",
                                    "notification_hasmany_service_relationship",
                                    "cat_id",
                                    "name_task",
                                    "type",
                                    "is_read",
                                    "performer_id",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotificationsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications edit",
                "operationId": "notifications_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/relation": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications relation",
                "operationId": "notifications_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications restore",
                "operationId": "notifications_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses index",
                "operationId": "addresses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "location",
                                "latitude",
                                "longitude",
                                "default",
                                "task_id",
                                "address_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[location]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[latitude]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[longitude]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[default]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAddressesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses store",
                "operationId": "addresses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/create": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses create",
                "operationId": "addresses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses show",
                "operationId": "addresses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses update",
                "operationId": "addresses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses delete",
                "operationId": "addresses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses single update",
                "operationId": "addresses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "location",
                                "latitude",
                                "longitude",
                                "default",
                                "task_id",
                                "address_belongsto_user_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "location",
                                    "latitude",
                                    "longitude",
                                    "default",
                                    "task_id",
                                    "address_belongsto_user_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses edit",
                "operationId": "addresses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/relation": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses relation",
                "operationId": "addresses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses restore",
                "operationId": "addresses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet_balances index",
                "operationId": "wallet_balances_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "balance",
                                "user_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "deleted_by",
                                "updated_by",
                                "created_by",
                                "wallet_balance_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[balance]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerWalletBalancesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances store",
                "operationId": "wallet-balances_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/create": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet_balances create",
                "operationId": "wallet_balances_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances show",
                "operationId": "wallet-balances_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances update",
                "operationId": "wallet-balances_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances delete",
                "operationId": "wallet-balances_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances single update",
                "operationId": "wallet-balances_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "balance",
                                "created_at",
                                "user_id",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "balance",
                                    "created_at",
                                    "user_id",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances edit",
                "operationId": "wallet-balances_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/relation": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances relation",
                "operationId": "wallet-balances_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances restore",
                "operationId": "wallet-balances_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions index",
                "operationId": "permissions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "key",
                                "table_name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[table_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPermissionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions store",
                "operationId": "permissions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/create": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions create",
                "operationId": "permissions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions show",
                "operationId": "permissions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions update",
                "operationId": "permissions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions delete",
                "operationId": "permissions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions single update",
                "operationId": "permissions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "key",
                                "table_name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "key",
                                    "table_name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions edit",
                "operationId": "permissions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/relation": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions relation",
                "operationId": "permissions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions restore",
                "operationId": "permissions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq_categories index",
                "operationId": "faq_categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "description",
                                "cat_author",
                                "num_quest",
                                "created_at",
                                "updated_at",
                                "logo"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[cat_author]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[num_quest]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[updated_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[logo]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories store",
                "operationId": "faq-categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/create": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq_categories create",
                "operationId": "faq_categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories show",
                "operationId": "faq-categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories update",
                "operationId": "faq-categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories delete",
                "operationId": "faq-categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories single update",
                "operationId": "faq-categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "description",
                                "cat_author",
                                "num_quest",
                                "created_at",
                                "logo"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "description",
                                    "cat_author",
                                    "num_quest",
                                    "created_at",
                                    "logo"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories edit",
                "operationId": "faq-categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/relation": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories relation",
                "operationId": "faq-categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories restore",
                "operationId": "faq-categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs index",
                "operationId": "faqs_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "question",
                                "q_descript",
                                "answer_text",
                                "category_id",
                                "created_at",
                                "updated_at",
                                "faq_belongsto_faq_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[question]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[q_descript]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[answer_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFaqsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs store",
                "operationId": "faqs_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/create": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs create",
                "operationId": "faqs_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs show",
                "operationId": "faqs_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs update",
                "operationId": "faqs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs delete",
                "operationId": "faqs_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs single update",
                "operationId": "faqs_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "question",
                                "q_descript",
                                "answer_text",
                                "category_id",
                                "created_at",
                                "faq_belongsto_faq_category_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "question",
                                    "q_descript",
                                    "answer_text",
                                    "category_id",
                                    "created_at",
                                    "faq_belongsto_faq_category_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs edit",
                "operationId": "faqs_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/relation": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs relation",
                "operationId": "faqs_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs restore",
                "operationId": "faqs_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia index",
                "operationId": "massmedia_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "title",
                                "description",
                                "link"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMassmediaBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia store",
                "operationId": "massmedia_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/create": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia create",
                "operationId": "massmedia_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia show",
                "operationId": "massmedia_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia update",
                "operationId": "massmedia_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia delete",
                "operationId": "massmedia_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia single update",
                "operationId": "massmedia_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "description",
                                "created_at",
                                "link"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "description",
                                    "created_at",
                                    "link"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia edit",
                "operationId": "massmedia_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/relation": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia relation",
                "operationId": "massmedia_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia restore",
                "operationId": "massmedia_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "sys index",
                "operationId": "sys_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSysBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions store",
                "operationId": "regions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSysStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/create": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "sys create",
                "operationId": "sys_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions show",
                "operationId": "regions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions update",
                "operationId": "regions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSysUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions delete",
                "operationId": "regions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions single update",
                "operationId": "regions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSysSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions edit",
                "operationId": "regions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSysReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/relation": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions relation",
                "operationId": "regions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions restore",
                "operationId": "regions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance index",
                "operationId": "compliance_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerComplianceBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance store",
                "operationId": "compliance_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/create": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance create",
                "operationId": "compliance_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance show",
                "operationId": "compliance_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance update",
                "operationId": "compliance_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance delete",
                "operationId": "compliance_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance single update",
                "operationId": "compliance_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": []
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": []
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance edit",
                "operationId": "compliance_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/relation": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance relation",
                "operationId": "compliance_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance restore",
                "operationId": "compliance_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances index",
                "operationId": "compliances_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "compliance_type_id",
                                "text",
                                "user_id",
                                "task_id",
                                "created_at",
                                "updated_at",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[compliance_type_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCompliancesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances store",
                "operationId": "compliances_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/create": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances create",
                "operationId": "compliances_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances show",
                "operationId": "compliances_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances update",
                "operationId": "compliances_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances delete",
                "operationId": "compliances_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances single update",
                "operationId": "compliances_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "compliance_type_id",
                                "text",
                                "user_id",
                                "task_id",
                                "created_at",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "compliance_type_id",
                                    "text",
                                    "user_id",
                                    "task_id",
                                    "created_at",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances edit",
                "operationId": "compliances_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/relation": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances relation",
                "operationId": "compliances_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances restore",
                "operationId": "compliances_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom_fields_values index",
                "operationId": "custom_fields_values_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "task_id",
                                "custom_field_id",
                                "value",
                                "created_at",
                                "updated_at",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[custom_field_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values store",
                "operationId": "custom-fields-values_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/create": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom_fields_values create",
                "operationId": "custom_fields_values_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values show",
                "operationId": "custom-fields-values_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values update",
                "operationId": "custom-fields-values_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values delete",
                "operationId": "custom-fields-values_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values single update",
                "operationId": "custom-fields-values_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "task_id",
                                "custom_field_id",
                                "value",
                                "created_at",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "task_id",
                                    "custom_field_id",
                                    "value",
                                    "created_at",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values edit",
                "operationId": "custom-fields-values_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/relation": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values relation",
                "operationId": "custom-fields-values_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values restore",
                "operationId": "custom-fields-values_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/create": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews create",
                "operationId": "reviews_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews show",
                "operationId": "reviews_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews update",
                "operationId": "reviews_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReviewsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews delete",
                "operationId": "reviews_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews single update",
                "operationId": "reviews_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "user_id",
                                "description",
                                "good_bad",
                                "created_at",
                                "reviewer_id",
                                "as_performer",
                                "task_id",
                                "reviewer_name",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user_id",
                                    "description",
                                    "good_bad",
                                    "created_at",
                                    "reviewer_id",
                                    "as_performer",
                                    "task_id",
                                    "reviewer_name",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReviewsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews edit",
                "operationId": "reviews_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/relation": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews relation",
                "operationId": "reviews_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews restore",
                "operationId": "reviews_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user_views index",
                "operationId": "user_views_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "user_id",
                                "performer_id"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUserViewsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views store",
                "operationId": "user-views_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/create": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user_views create",
                "operationId": "user_views_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views show",
                "operationId": "user-views_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views update",
                "operationId": "user-views_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views delete",
                "operationId": "user-views_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views single update",
                "operationId": "user-views_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "created_at",
                                "user_id",
                                "performer_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "created_at",
                                    "user_id",
                                    "performer_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views edit",
                "operationId": "user-views_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/relation": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views relation",
                "operationId": "user-views_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views restore",
                "operationId": "user-views_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance_types index",
                "operationId": "compliance_types_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerComplianceTypesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types store",
                "operationId": "compliance-types_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/create": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance_types create",
                "operationId": "compliance_types_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types show",
                "operationId": "compliance-types_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types update",
                "operationId": "compliance-types_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types delete",
                "operationId": "compliance-types_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types single update",
                "operationId": "compliance-types_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types edit",
                "operationId": "compliance-types_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/relation": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types relation",
                "operationId": "compliance-types_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types restore",
                "operationId": "compliance-types_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user_expenses index",
                "operationId": "user_expenses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "user_id",
                                "task_id",
                                "client_id",
                                "amount",
                                "created_at",
                                "updated_at",
                                "user_expense_belongsto_user_relationship",
                                "user_expense_belongsto_task_relationship",
                                "user_expense_belongsto_user_relationship_1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[task_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[client_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUserExpensesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses store",
                "operationId": "user-expenses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/create": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user_expenses create",
                "operationId": "user_expenses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses show",
                "operationId": "user-expenses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses update",
                "operationId": "user-expenses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses delete",
                "operationId": "user-expenses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses single update",
                "operationId": "user-expenses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "user_id",
                                "task_id",
                                "client_id",
                                "amount",
                                "created_at",
                                "user_expense_belongsto_user_relationship",
                                "user_expense_belongsto_task_relationship",
                                "user_expense_belongsto_user_relationship_1"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user_id",
                                    "task_id",
                                    "client_id",
                                    "amount",
                                    "created_at",
                                    "user_expense_belongsto_user_relationship",
                                    "user_expense_belongsto_task_relationship",
                                    "user_expense_belongsto_user_relationship_1"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses edit",
                "operationId": "user-expenses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/relation": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses relation",
                "operationId": "user-expenses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses restore",
                "operationId": "user-expenses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task_responses index",
                "operationId": "task_responses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "description",
                                "user_id",
                                "task_id",
                                "notificate",
                                "price",
                                "performer_id",
                                "created_at",
                                "updated_at",
                                "not_free",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[not_free][]",
                        "in": "query",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    0,
                                    1
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerTaskResponsesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses store",
                "operationId": "task-responses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/create": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task_responses create",
                "operationId": "task_responses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses show",
                "operationId": "task-responses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses update",
                "operationId": "task-responses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses delete",
                "operationId": "task-responses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses single update",
                "operationId": "task-responses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "user_id",
                                "task_id",
                                "price",
                                "performer_id",
                                "created_at",
                                "not_free",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "user_id",
                                    "task_id",
                                    "price",
                                    "performer_id",
                                    "created_at",
                                    "not_free",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses edit",
                "operationId": "task-responses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/relation": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses relation",
                "operationId": "task-responses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses restore",
                "operationId": "task-responses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog_new index",
                "operationId": "blog_new_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "desc",
                                "text",
                                "img",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[desc]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[img]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerBlogNewBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new store",
                "operationId": "blog-new_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/create": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog_new create",
                "operationId": "blog_new_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new show",
                "operationId": "blog-new_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new update",
                "operationId": "blog-new_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new delete",
                "operationId": "blog-new_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new single update",
                "operationId": "blog-new_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "text",
                                "desc",
                                "img",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "text",
                                    "desc",
                                    "img",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new edit",
                "operationId": "blog-new_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/relation": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new relation",
                "operationId": "blog-new_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new restore",
                "operationId": "blog-new_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents index",
                "operationId": "contents_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[page]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "key",
                                "page",
                                "text_uz",
                                "text_ru",
                                "image"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[updated_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text_uz]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text_ru]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerContentsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents store",
                "operationId": "contents_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/create": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents create",
                "operationId": "contents_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents show",
                "operationId": "contents_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents update",
                "operationId": "contents_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents delete",
                "operationId": "contents_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents single update",
                "operationId": "contents_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "created_at",
                                "updated_at",
                                "key",
                                "page",
                                "text_uz",
                                "text_ru",
                                "image"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "created_at",
                                    "updated_at",
                                    "key",
                                    "page",
                                    "text_uz",
                                    "text_ru",
                                    "image"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents edit",
                "operationId": "contents_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/relation": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents relation",
                "operationId": "contents_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents restore",
                "operationId": "contents_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies index",
                "operationId": "privacies_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "text",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPrivaciesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies store",
                "operationId": "privacies_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/create": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies create",
                "operationId": "privacies_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies show",
                "operationId": "privacies_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies update",
                "operationId": "privacies_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies delete",
                "operationId": "privacies_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies single update",
                "operationId": "privacies_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "text",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "text",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies edit",
                "operationId": "privacies_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/relation": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies relation",
                "operationId": "privacies_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies restore",
                "operationId": "privacies_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer_review index",
                "operationId": "footer_review_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "text",
                                "image",
                                "created_at",
                                "updated_at",
                                "review_type",
                                "site_link"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[review_type][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    2
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[site_link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFooterReviewBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review store",
                "operationId": "footer-review_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/create": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer_review create",
                "operationId": "footer_review_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": []
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review show",
                "operationId": "footer-review_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review update",
                "operationId": "footer-review_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review delete",
                "operationId": "footer-review_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review single update",
                "operationId": "footer-review_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "text",
                                "image",
                                "created_at",
                                "review_type",
                                "site_link"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "text",
                                    "image",
                                    "created_at",
                                    "review_type",
                                    "site_link"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review edit",
                "operationId": "footer-review_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/relation": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review relation",
                "operationId": "footer-review_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": []
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review restore",
                "operationId": "footer-review_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Auth": [],
            "User": [],
            "Links": {
                "properties": {
                    "first": {
                        "description": "First page api link",
                        "type": "string",
                        "example": "http:\/\/localhost:8000\/api\/users?page=1"
                    },
                    "last": {
                        "description": "Last page api link",
                        "type": "string",
                        "example": "http:\/\/localhost:8000\/api\/users?page=10"
                    },
                    "prev": {
                        "description": "revious page api link",
                        "type": "string",
                        "example": null
                    },
                    "next": {
                        "description": "Next page api link",
                        "type": "string",
                        "example": "http:\/\/localhost:8000\/api\/users?page=2"
                    }
                },
                "type": "object"
            },
            "Meta": {
                "properties": {
                    "current_page": {
                        "description": "Current page",
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "description": "From Offset",
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "description": "Last page",
                        "type": "integer",
                        "example": 10
                    },
                    "path": {
                        "description": "Current api path",
                        "type": "string",
                        "example": "http:\/\/localhost:8000\/api\/users?page=2"
                    },
                    "per_page": {
                        "description": "Per page length",
                        "type": "integer",
                        "example": 10
                    },
                    "to": {
                        "description": "To Offset",
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "description": "Total items",
                        "type": "integer",
                        "example": 100
                    },
                    "showCheckboxColumn": {
                        "description": "True if user has bulk delete\/action persmission",
                        "type": "boolean",
                        "example": false
                    },
                    "recordsTotal": {
                        "description": "Total items",
                        "type": "integer",
                        "example": 100
                    },
                    "recordsFiltered": {
                        "description": "Total filtered items",
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "VoyagerUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "active_task": {
                        "type": "string",
                        "description": "Active Task"
                    },
                    "active_step": {
                        "type": "string",
                        "description": "Active Step"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "roles"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone Number"
                    },
                    "g-recaptcha-response": {
                        "type": "string",
                        "description": "G-recaptcha-response"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "work_experience": {
                        "type": "string",
                        "description": "Work Experience"
                    },
                    "born_date": {
                        "type": "string",
                        "description": "Born Date"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    }
                }
            },
            "VoyagerUsersReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "roles"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone Number"
                    },
                    "g-recaptcha-response": {
                        "type": "string",
                        "description": "G-recaptcha-response"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "work_experience": {
                        "type": "string",
                        "description": "Work Experience"
                    },
                    "born_date": {
                        "type": "string",
                        "description": "Born Date"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    }
                }
            },
            "VoyagerMenusBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerMenusReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerRolesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerRolesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "ico": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "max": {
                        "type": "integer",
                        "description": "Max"
                    },
                    "double_address": {
                        "type": "string",
                        "description": "Double Address"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "parent_id": {
                        "enum": [
                            ""
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\"\n}"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "custom_route_title": {
                        "type": "string",
                        "description": "Custom Route Title"
                    },
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "ico": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "max": {
                        "type": "integer",
                        "description": "Max"
                    },
                    "min": {
                        "type": "integer",
                        "description": "Min"
                    },
                    "double_address": {
                        "type": "string",
                        "description": "Double Address"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPagesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerPagesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "excerpt": {
                        "type": "string",
                        "description": "Excerpt"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "meta_description": {
                        "type": "string",
                        "description": "Meta Description"
                    },
                    "meta_keywords": {
                        "type": "string",
                        "description": "Meta Keywords"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerCustomFieldsBrowseResource": {
                "type": "object",
                "properties": {
                    "custom_field_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435"
                    },
                    "data_type": {
                        "enum": [
                            "",
                            "string",
                            "int",
                            "double"
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                    },
                    "required": {
                        "type": "string",
                        "description": "Required"
                    },
                    "type": {
                        "type": "string",
                        "description": "Input Type"
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regex"
                    },
                    "label": {
                        "type": "string",
                        "description": "Input Label"
                    },
                    "min": {
                        "type": "string",
                        "description": "Min"
                    },
                    "placeholder": {
                        "type": "string",
                        "description": "Input Placeholder"
                    },
                    "max": {
                        "type": "string",
                        "description": "Max"
                    },
                    "route": {
                        "enum": [
                            "name",
                            "address",
                            "custom",
                            "date",
                            "budget",
                            "notes",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "order": {
                        "type": "integer",
                        "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
                    },
                    "values": {
                        "type": "string",
                        "description": "In Options Default value"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsReadResource": {
                "type": "object",
                "properties": {
                    "custom_field_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435"
                    },
                    "description": {
                        "type": "string",
                        "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f "
                    },
                    "data_type": {
                        "enum": [
                            "",
                            "string",
                            "int",
                            "double"
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                    },
                    "required": {
                        "type": "string",
                        "description": "Required"
                    },
                    "name": {
                        "type": "string",
                        "description": "Input Name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Input Type"
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regex"
                    },
                    "label": {
                        "type": "string",
                        "description": "Input Label"
                    },
                    "min": {
                        "type": "string",
                        "description": "Min"
                    },
                    "placeholder": {
                        "type": "string",
                        "description": "Input Placeholder"
                    },
                    "max": {
                        "type": "string",
                        "description": "Max"
                    },
                    "route": {
                        "enum": [
                            "name",
                            "address",
                            "custom",
                            "date",
                            "budget",
                            "notes",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "order": {
                        "type": "integer",
                        "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
                    },
                    "values": {
                        "type": "string",
                        "description": "In Options Default value"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerTasksBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "name": {
                        "type": "string",
                        "description": "\u0418\u043c\u044f"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "date_type": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                        "example": "2021-05-17 00:00"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                        "example": "2021-05-17 00:00"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "\u0411\u044e\u0434\u0436\u0435\u0442"
                    },
                    "description": {
                        "type": "string",
                        "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
                    },
                    "photos": {
                        "type": "string",
                        "description": "\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438"
                    },
                    "status": {
                        "enum": [
                            1,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "performer_review": {
                        "type": "string",
                        "description": "Performer Review"
                    },
                    "task_hasmany_custom_field_relationship": {
                        "type": "integer",
                        "description": "custom_fields"
                    },
                    "oplata": {
                        "type": "string",
                        "description": "Oplata"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "docs": {
                        "type": "string",
                        "description": "Docs"
                    },
                    "views": {
                        "type": "string",
                        "description": "Views"
                    },
                    "responses_count": {
                        "type": "string",
                        "description": "Responses Count"
                    },
                    "is_phone_verified": {
                        "type": "string",
                        "description": "Is Phone Verified"
                    },
                    "verify_code": {
                        "type": "string",
                        "description": "Verify Code"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_completed_reason": {
                        "type": "string",
                        "description": "Not Completed Reason"
                    }
                }
            },
            "VoyagerTasksReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "name": {
                        "type": "string",
                        "description": "\u0418\u043c\u044f"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "date_type": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                        "example": "2021-05-17 00:00"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                        "example": "2021-05-17 00:00"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "\u0411\u044e\u0434\u0436\u0435\u0442"
                    },
                    "description": {
                        "type": "string",
                        "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
                    },
                    "photos": {
                        "type": "string",
                        "description": "\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438"
                    },
                    "status": {
                        "enum": [
                            1,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "performer_review": {
                        "type": "string",
                        "description": "Performer Review"
                    },
                    "task_hasmany_custom_field_relationship": {
                        "type": "integer",
                        "description": "custom_fields"
                    },
                    "oplata": {
                        "type": "string",
                        "description": "Oplata"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "docs": {
                        "type": "string",
                        "description": "Docs"
                    },
                    "views": {
                        "type": "string",
                        "description": "Views"
                    },
                    "responses_count": {
                        "type": "string",
                        "description": "Responses Count"
                    },
                    "is_phone_verified": {
                        "type": "string",
                        "description": "Is Phone Verified"
                    },
                    "verify_code": {
                        "type": "string",
                        "description": "Verify Code"
                    },
                    "verify_expiration": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Verify Expiration",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_completed_reason": {
                        "type": "string",
                        "description": "Not Completed Reason"
                    }
                }
            },
            "VoyagerNotificationsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "notification_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "notification_hasmany_service_relationship": {
                        "type": "integer",
                        "description": "services"
                    },
                    "cat_id": {
                        "type": "string",
                        "description": "Cat Id"
                    },
                    "name_task": {
                        "type": "string",
                        "description": "Name Task"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is Read"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerNotificationsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "notification_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "notification_hasmany_service_relationship": {
                        "type": "integer",
                        "description": "services"
                    },
                    "cat_id": {
                        "type": "string",
                        "description": "Cat Id"
                    },
                    "name_task": {
                        "type": "string",
                        "description": "Name Task"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is Read"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAddressesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude"
                    },
                    "default": {
                        "type": "string",
                        "description": "Default"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "address_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerAddressesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude"
                    },
                    "default": {
                        "type": "string",
                        "description": "Default"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "address_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerWalletBalancesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "wallet_balance_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "balance": {
                        "type": "string",
                        "description": "Balance"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerWalletBalancesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "wallet_balance_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "balance": {
                        "type": "string",
                        "description": "Balance"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPermissionsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "table_name": {
                        "type": "string",
                        "description": "Table Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPermissionsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "table_name": {
                        "type": "string",
                        "description": "Table Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFaqCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "cat_author": {
                        "type": "string",
                        "description": "Cat Author"
                    },
                    "num_quest": {
                        "type": "integer",
                        "description": "Num Quest"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "logo": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerFaqCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "cat_author": {
                        "type": "string",
                        "description": "Cat Author"
                    },
                    "num_quest": {
                        "type": "integer",
                        "description": "Num Quest"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "logo": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerFaqsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id"
                    },
                    "question": {
                        "type": "string",
                        "description": "Question"
                    },
                    "q_descript": {
                        "type": "string",
                        "description": "Q Descript"
                    },
                    "answer_text": {
                        "type": "string",
                        "description": "Answer Text"
                    },
                    "category_id": {
                        "type": "integer",
                        "description": "Category Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "faq_belongsto_faq_category_relationship": {
                        "type": "integer",
                        "description": "faq_categories"
                    }
                }
            },
            "VoyagerFaqsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id"
                    },
                    "question": {
                        "type": "string",
                        "description": "Question"
                    },
                    "q_descript": {
                        "type": "string",
                        "description": "Q Descript"
                    },
                    "answer_text": {
                        "type": "string",
                        "description": "Answer Text"
                    },
                    "category_id": {
                        "type": "integer",
                        "description": "Category Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "faq_belongsto_faq_category_relationship": {
                        "type": "integer",
                        "description": "faq_categories"
                    }
                }
            },
            "VoyagerMassmediaBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    }
                }
            },
            "VoyagerMassmediaReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    }
                }
            },
            "VoyagerSysBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerSysReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerComplianceBrowseResource": {
                "type": "object",
                "properties": []
            },
            "VoyagerComplianceReadResource": {
                "type": "object",
                "properties": []
            },
            "VoyagerCompliancesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "compliance_type_id": {
                        "type": "string",
                        "description": "Compliance Type Id"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCompliancesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "compliance_type_id": {
                        "type": "string",
                        "description": "Compliance Type Id"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsValuesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "custom_field_id": {
                        "type": "string",
                        "description": "Custom Field Id"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsValuesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "custom_field_id": {
                        "type": "string",
                        "description": "Custom Field Id"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerReviewsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "good_bad": {
                        "type": "string",
                        "description": "Good Bad"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "reviewer_id": {
                        "type": "string",
                        "description": "Reviewer Id"
                    },
                    "as_performer": {
                        "type": "string",
                        "description": "As Performer"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "reviewer_name": {
                        "type": "string",
                        "description": "Reviewer Name"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerReviewsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "good_bad": {
                        "type": "string",
                        "description": "Good Bad"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "reviewer_id": {
                        "type": "string",
                        "description": "Reviewer Id"
                    },
                    "as_performer": {
                        "type": "string",
                        "description": "As Performer"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "reviewer_name": {
                        "type": "string",
                        "description": "Reviewer Name"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerUserViewsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    }
                }
            },
            "VoyagerUserViewsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    }
                }
            },
            "VoyagerComplianceTypesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerComplianceTypesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerUserExpensesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "client_id": {
                        "type": "string",
                        "description": "Client Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_expense_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "user_expense_belongsto_task_relationship": {
                        "type": "integer",
                        "description": "tasks"
                    },
                    "user_expense_belongsto_user_relationship_1": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerUserExpensesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "client_id": {
                        "type": "string",
                        "description": "Client Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_expense_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "user_expense_belongsto_task_relationship": {
                        "type": "integer",
                        "description": "tasks"
                    },
                    "user_expense_belongsto_user_relationship_1": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerTaskResponsesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "price": {
                        "type": "string",
                        "description": "Price"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_free": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerTaskResponsesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "price": {
                        "type": "string",
                        "description": "Price"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_free": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerBlogNewBrowseResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Desc"
                    },
                    "img": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerBlogNewReadResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Desc"
                    },
                    "img": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerContentsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page"
                    },
                    "text_uz": {
                        "type": "string",
                        "description": "Text Uz"
                    },
                    "text_ru": {
                        "type": "string",
                        "description": "Text Ru"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerContentsReadResource": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page"
                    },
                    "text_uz": {
                        "type": "string",
                        "description": "Text Uz"
                    },
                    "text_ru": {
                        "type": "string",
                        "description": "Text Ru"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerPrivaciesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPrivaciesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFooterReviewBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "review_type": {
                        "enum": [
                            1,
                            2
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                    },
                    "site_link": {
                        "type": "string",
                        "description": "Site Link"
                    }
                }
            },
            "VoyagerFooterReviewReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "review_type": {
                        "enum": [
                            1,
                            2
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                    },
                    "site_link": {
                        "type": "string",
                        "description": "Site Link"
                    }
                }
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "description": "Bearer token",
                "name": "Authorization",
                "in": "header"
            }
        },
        "requestBodies": {
            "VoyagerUsersStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "g-recaptcha-response": {
                                    "type": "string",
                                    "description": "G-recaptcha-response"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "g-recaptcha-response": {
                                    "type": "string",
                                    "description": "G-recaptcha-response"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "g-recaptcha-response": {
                                    "type": "string",
                                    "description": "G-recaptcha-response"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Version"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "options_ru": {
                                    "type": "string",
                                    "description": "Options Ru"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u044f "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "\u0418\u043c\u044f"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "\u0411\u044e\u0434\u0436\u0435\u0442"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "\u0418\u043c\u044f"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "\u0411\u044e\u0434\u0436\u0435\u0442"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "\u0418\u043c\u044f"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043d\u0430\u0447\u0430\u043b\u0430",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "\u0414\u0430\u0442\u0430 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "\u0411\u044e\u0434\u0436\u0435\u0442"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSysStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSysUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSysSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        }
    }
}