{
    "openapi": "3.0.2",
    "info": {
        "title": "USer.uz",
        "description": "Joy VoyagerApi module adds REST Api end points to Voyager with Passport and Swagger support https:\/\/github.com\/rxcod9\/joy-voyager-api.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http:\/\/dev.user.uz",
            "description": "Primary API Server"
        }
    ],
    "paths": {
        "\/api\/users": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users index",
                "operationId": "users_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "role_id",
                                "name",
                                "email",
                                "active_task",
                                "active_step",
                                "is_active",
                                "youtube_link",
                                "avatar",
                                "password",
                                "remember_token",
                                "settings",
                                "phone_number",
                                "api_token",
                                "device_token",
                                "notification_type",
                                "socails",
                                "location",
                                "views",
                                "last_name",
                                "google_id",
                                "facebook_id",
                                "messenger_color",
                                "dark_mode",
                                "active_status",
                                "description",
                                "district",
                                "is_email_verified",
                                "verify_code",
                                "verify_expiration",
                                "is_phone_number_verified",
                                "born_date",
                                "work_experience",
                                "email_old",
                                "version",
                                "phone_number_old",
                                "system_notification",
                                "news_notification",
                                "notification_off",
                                "notification_to",
                                "notification_from",
                                "last_seen",
                                "gender",
                                "sms_notification",
                                "email_notification",
                                "reviews",
                                "firebase_token",
                                "review_good",
                                "review_bad",
                                "review_rating",
                                "apple_id",
                                "updated_password_by",
                                "updated_password_at",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "user_belongsto_role_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[email]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active_task]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[active_step]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[avatar]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[role_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[phone_number]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[work_experience]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[born_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updated_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUsersBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users store",
                "operationId": "users_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/create": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users create",
                "operationId": "users_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users show",
                "operationId": "users_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users update",
                "operationId": "users_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users delete",
                "operationId": "users_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users single update",
                "operationId": "users_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "email",
                                "password",
                                "avatar",
                                "role_id",
                                "user_belongsto_role_relationship",
                                "phone_number",
                                "description",
                                "work_experience",
                                "born_date"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "email",
                                    "password",
                                    "avatar",
                                    "role_id",
                                    "user_belongsto_role_relationship",
                                    "phone_number",
                                    "description",
                                    "work_experience",
                                    "born_date"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users edit",
                "operationId": "users_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/relation": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users relation",
                "operationId": "users_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | users"
                ],
                "summary": "users restore",
                "operationId": "users_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus index",
                "operationId": "menus_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMenusBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus store",
                "operationId": "menus_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/create": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus create",
                "operationId": "menus_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus show",
                "operationId": "menus_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus update",
                "operationId": "menus_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus delete",
                "operationId": "menus_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus single update",
                "operationId": "menus_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMenusSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus edit",
                "operationId": "menus_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMenusReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/relation": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus relation",
                "operationId": "menus_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/menus\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | menus"
                ],
                "summary": "menus restore",
                "operationId": "menus_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles index",
                "operationId": "roles_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "display_name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[display_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRolesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles store",
                "operationId": "roles_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/create": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles create",
                "operationId": "roles_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles show",
                "operationId": "roles_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles update",
                "operationId": "roles_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles delete",
                "operationId": "roles_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles single update",
                "operationId": "roles_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "id",
                                "name",
                                "display_name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "name",
                                    "display_name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRolesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles edit",
                "operationId": "roles_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRolesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/relation": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles relation",
                "operationId": "roles_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/roles\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | roles"
                ],
                "summary": "roles restore",
                "operationId": "roles_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories index",
                "operationId": "categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "parent_id",
                                "order",
                                "name",
                                "custom_route_title",
                                "max",
                                "min",
                                "slug",
                                "ico",
                                "ico_mini",
                                "double_address",
                                "remote",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[ico]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[max]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[double_address]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[remote]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updated_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories store",
                "operationId": "categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/create": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories create",
                "operationId": "categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories show",
                "operationId": "categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories update",
                "operationId": "categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories delete",
                "operationId": "categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories single update",
                "operationId": "categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "parent_id",
                                "name",
                                "custom_route_title",
                                "order",
                                "slug",
                                "ico",
                                "max",
                                "min",
                                "double_address",
                                "remote",
                                "deleted_by",
                                "updated_by",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parent_id",
                                    "name",
                                    "custom_route_title",
                                    "order",
                                    "slug",
                                    "ico",
                                    "max",
                                    "min",
                                    "double_address",
                                    "remote",
                                    "deleted_by",
                                    "updated_by",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories edit",
                "operationId": "categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/relation": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories relation",
                "operationId": "categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | categories"
                ],
                "summary": "categories restore",
                "operationId": "categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages index",
                "operationId": "pages_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "author_id",
                                "title",
                                "excerpt",
                                "body",
                                "image",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "INACTIVE",
                                    "ACTIVE"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPagesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages store",
                "operationId": "pages_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/create": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages create",
                "operationId": "pages_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages show",
                "operationId": "pages_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages update",
                "operationId": "pages_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages delete",
                "operationId": "pages_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages single update",
                "operationId": "pages_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "excerpt",
                                "body",
                                "slug",
                                "meta_description",
                                "meta_keywords",
                                "status",
                                "image"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "excerpt",
                                    "body",
                                    "slug",
                                    "meta_description",
                                    "meta_keywords",
                                    "status",
                                    "image"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPagesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages edit",
                "operationId": "pages_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPagesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/relation": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages relation",
                "operationId": "pages_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/pages\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | pages"
                ],
                "summary": "pages restore",
                "operationId": "pages_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials index",
                "operationId": "socials_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "social_name",
                                "social_link",
                                "user_id",
                                "social_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[social_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[social_link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSocialsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials store",
                "operationId": "socials_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSocialsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSocialsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/create": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials create",
                "operationId": "socials_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/{id}": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials show",
                "operationId": "socials_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSocialsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials update",
                "operationId": "socials_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSocialsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSocialsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials delete",
                "operationId": "socials_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials single update",
                "operationId": "socials_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "social_name",
                                "social_link",
                                "user_id",
                                "social_belongsto_user_relationship",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "social_name",
                                    "social_link",
                                    "user_id",
                                    "social_belongsto_user_relationship",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSocialsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSocialsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials edit",
                "operationId": "socials_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSocialsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/relation": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials relation",
                "operationId": "socials_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/socials\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | socials"
                ],
                "summary": "socials restore",
                "operationId": "socials_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom_fields index",
                "operationId": "custom_fields_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "title",
                                "type",
                                "required",
                                "data_type",
                                "regex",
                                "min",
                                "max",
                                "options",
                                "options_ru",
                                "values",
                                "category_id",
                                "route",
                                "order",
                                "description",
                                "placeholder",
                                "label",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "custom_field_belongsto_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[category_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[data_type][]",
                        "in": "query",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "",
                                    "string",
                                    "int",
                                    "double"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[required]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[regex]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[label]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[min]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[placeholder]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[max]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[route][]",
                        "in": "query",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    "name",
                                    "address",
                                    "custom",
                                    "date",
                                    "budget",
                                    "notes",
                                    "contacts"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[order]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[values]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCustomFieldsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields store",
                "operationId": "custom-fields_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/create": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom_fields create",
                "operationId": "custom_fields_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields show",
                "operationId": "custom-fields_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields update",
                "operationId": "custom-fields_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields delete",
                "operationId": "custom-fields_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields single update",
                "operationId": "custom-fields_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "custom_field_belongsto_category_relationship",
                                "category_id",
                                "title",
                                "description",
                                "data_type",
                                "required",
                                "name",
                                "type",
                                "regex",
                                "label",
                                "min",
                                "placeholder",
                                "max",
                                "options",
                                "route",
                                "order",
                                "values",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "custom_field_belongsto_category_relationship",
                                    "category_id",
                                    "title",
                                    "description",
                                    "data_type",
                                    "required",
                                    "name",
                                    "type",
                                    "regex",
                                    "label",
                                    "min",
                                    "placeholder",
                                    "max",
                                    "options",
                                    "route",
                                    "order",
                                    "values",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields edit",
                "operationId": "custom-fields_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/relation": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields relation",
                "operationId": "custom-fields_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | custom-fields"
                ],
                "summary": "custom-fields restore",
                "operationId": "custom-fields_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks index",
                "operationId": "tasks_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "remote",
                                "return_to_b",
                                "date_type",
                                "start_date",
                                "end_date",
                                "budget",
                                "services",
                                "description",
                                "description_private",
                                "photos",
                                "show_only_to_performers",
                                "status",
                                "phone",
                                "category_id",
                                "performer_id",
                                "performer_review",
                                "oplata",
                                "user_id",
                                "coordinates",
                                "docs",
                                "go_back",
                                "views",
                                "responses_count",
                                "is_phone_verified",
                                "verify_code",
                                "verify_expiration",
                                "not_completed_reason",
                                "created_at",
                                "created_by",
                                "updated_at",
                                "updated_by",
                                "deleted_at",
                                "deleted_by",
                                "task_hasmany_custom_field_relationship",
                                "task_belongsto_service_relationship",
                                "task_belongsto_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[remote]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[date_type][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    2,
                                    3
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[start_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[end_date]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[budget]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[photos]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[status][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    3,
                                    4,
                                    5,
                                    6
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[phone]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_review]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[oplata]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[docs]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[views]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[responses_count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_phone_verified]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[verify_code]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[not_completed_reason]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerTasksBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks store",
                "operationId": "tasks_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/create": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks create",
                "operationId": "tasks_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks show",
                "operationId": "tasks_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks update",
                "operationId": "tasks_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks delete",
                "operationId": "tasks_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks single update",
                "operationId": "tasks_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "remote",
                                "date_type",
                                "start_date",
                                "end_date",
                                "budget",
                                "description",
                                "photos",
                                "status",
                                "phone",
                                "category_id",
                                "performer_id",
                                "performer_review",
                                "task_hasmany_custom_field_relationship",
                                "oplata",
                                "user_id",
                                "task_belongsto_category_relationship",
                                "docs",
                                "views",
                                "responses_count",
                                "is_phone_verified",
                                "verify_code",
                                "verify_expiration",
                                "deleted_at",
                                "not_completed_reason"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "remote",
                                    "date_type",
                                    "start_date",
                                    "end_date",
                                    "budget",
                                    "description",
                                    "photos",
                                    "status",
                                    "phone",
                                    "category_id",
                                    "performer_id",
                                    "performer_review",
                                    "task_hasmany_custom_field_relationship",
                                    "oplata",
                                    "user_id",
                                    "task_belongsto_category_relationship",
                                    "docs",
                                    "views",
                                    "responses_count",
                                    "is_phone_verified",
                                    "verify_code",
                                    "verify_expiration",
                                    "deleted_at",
                                    "not_completed_reason"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTasksSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks edit",
                "operationId": "tasks_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTasksReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/relation": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks relation",
                "operationId": "tasks_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/tasks\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | tasks"
                ],
                "summary": "tasks restore",
                "operationId": "tasks_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications index",
                "operationId": "notifications_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "description",
                                "user_id",
                                "service_id",
                                "task_id",
                                "cat_id",
                                "name_task",
                                "status",
                                "type",
                                "is_read",
                                "performer_id",
                                "deleted_at",
                                "news_id",
                                "notification_belongsto_user_relationship",
                                "notification_hasmany_service_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[service_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[cat_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name_task]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[is_read]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerNotificationsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications store",
                "operationId": "notifications_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotificationsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/create": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications create",
                "operationId": "notifications_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications show",
                "operationId": "notifications_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications update",
                "operationId": "notifications_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotificationsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications delete",
                "operationId": "notifications_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications single update",
                "operationId": "notifications_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "user_id",
                                "service_id",
                                "notification_belongsto_user_relationship",
                                "task_id",
                                "notification_hasmany_service_relationship",
                                "cat_id",
                                "name_task",
                                "type",
                                "is_read",
                                "performer_id",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "user_id",
                                    "service_id",
                                    "notification_belongsto_user_relationship",
                                    "task_id",
                                    "notification_hasmany_service_relationship",
                                    "cat_id",
                                    "name_task",
                                    "type",
                                    "is_read",
                                    "performer_id",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNotificationsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications edit",
                "operationId": "notifications_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/relation": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications relation",
                "operationId": "notifications_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/notifications\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | notifications"
                ],
                "summary": "notifications restore",
                "operationId": "notifications_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses index",
                "operationId": "addresses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "location",
                                "latitude",
                                "longitude",
                                "default",
                                "task_id",
                                "address_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[location]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[latitude]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[longitude]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[default]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerAddressesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses store",
                "operationId": "addresses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/create": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses create",
                "operationId": "addresses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses show",
                "operationId": "addresses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses update",
                "operationId": "addresses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses delete",
                "operationId": "addresses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses single update",
                "operationId": "addresses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "location",
                                "latitude",
                                "longitude",
                                "default",
                                "task_id",
                                "address_belongsto_user_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "location",
                                    "latitude",
                                    "longitude",
                                    "default",
                                    "task_id",
                                    "address_belongsto_user_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerAddressesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses edit",
                "operationId": "addresses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerAddressesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/relation": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses relation",
                "operationId": "addresses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/addresses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | addresses"
                ],
                "summary": "addresses restore",
                "operationId": "addresses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet_balances index",
                "operationId": "wallet_balances_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "balance",
                                "user_id",
                                "created_at",
                                "updated_at",
                                "deleted_at",
                                "deleted_by",
                                "updated_by",
                                "created_by",
                                "wallet_balance_belongsto_user_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[balance]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[updated_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_by]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerWalletBalancesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances store",
                "operationId": "wallet-balances_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/create": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet_balances create",
                "operationId": "wallet_balances_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances show",
                "operationId": "wallet-balances_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances update",
                "operationId": "wallet-balances_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances delete",
                "operationId": "wallet-balances_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances single update",
                "operationId": "wallet-balances_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "balance",
                                "created_at",
                                "user_id",
                                "deleted_at",
                                "deleted_by",
                                "updated_by",
                                "created_by"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "balance",
                                    "created_at",
                                    "user_id",
                                    "deleted_at",
                                    "deleted_by",
                                    "updated_by",
                                    "created_by"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerWalletBalancesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances edit",
                "operationId": "wallet-balances_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerWalletBalancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/relation": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances relation",
                "operationId": "wallet-balances_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/wallet-balances\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | wallet-balances"
                ],
                "summary": "wallet-balances restore",
                "operationId": "wallet-balances_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions index",
                "operationId": "permissions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "key",
                                "table_name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[table_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPermissionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions store",
                "operationId": "permissions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/create": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions create",
                "operationId": "permissions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions show",
                "operationId": "permissions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions update",
                "operationId": "permissions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions delete",
                "operationId": "permissions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions single update",
                "operationId": "permissions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "key",
                                "table_name"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "key",
                                    "table_name"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPermissionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions edit",
                "operationId": "permissions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPermissionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/relation": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions relation",
                "operationId": "permissions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/permissions\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | permissions"
                ],
                "summary": "permissions restore",
                "operationId": "permissions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq_categories index",
                "operationId": "faq_categories_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "description",
                                "cat_author",
                                "num_quest",
                                "created_at",
                                "updated_at",
                                "logo"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[cat_author]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[num_quest]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[updated_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[logo]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories store",
                "operationId": "faq-categories_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/create": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq_categories create",
                "operationId": "faq_categories_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories show",
                "operationId": "faq-categories_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories update",
                "operationId": "faq-categories_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories delete",
                "operationId": "faq-categories_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories single update",
                "operationId": "faq-categories_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "description",
                                "cat_author",
                                "num_quest",
                                "created_at",
                                "logo"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "description",
                                    "cat_author",
                                    "num_quest",
                                    "created_at",
                                    "logo"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqCategoriesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories edit",
                "operationId": "faq-categories_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqCategoriesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/relation": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories relation",
                "operationId": "faq-categories_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faq-categories\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | faq-categories"
                ],
                "summary": "faq-categories restore",
                "operationId": "faq-categories_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs index",
                "operationId": "faqs_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "question",
                                "q_descript",
                                "answer_text",
                                "category_id",
                                "created_at",
                                "updated_at",
                                "faq_belongsto_faq_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[question]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[q_descript]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[answer_text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFaqsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs store",
                "operationId": "faqs_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/create": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs create",
                "operationId": "faqs_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs show",
                "operationId": "faqs_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs update",
                "operationId": "faqs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs delete",
                "operationId": "faqs_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs single update",
                "operationId": "faqs_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "question",
                                "q_descript",
                                "answer_text",
                                "category_id",
                                "created_at",
                                "faq_belongsto_faq_category_relationship"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "question",
                                    "q_descript",
                                    "answer_text",
                                    "category_id",
                                    "created_at",
                                    "faq_belongsto_faq_category_relationship"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFaqsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs edit",
                "operationId": "faqs_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFaqsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/relation": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs relation",
                "operationId": "faqs_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/faqs\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | faqs"
                ],
                "summary": "faqs restore",
                "operationId": "faqs_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia index",
                "operationId": "massmedia_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "title",
                                "description",
                                "link"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerMassmediaBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia store",
                "operationId": "massmedia_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/create": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia create",
                "operationId": "massmedia_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia show",
                "operationId": "massmedia_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia update",
                "operationId": "massmedia_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia delete",
                "operationId": "massmedia_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia single update",
                "operationId": "massmedia_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "description",
                                "created_at",
                                "link"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "description",
                                    "created_at",
                                    "link"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerMassmediaSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia edit",
                "operationId": "massmedia_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerMassmediaReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/relation": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia relation",
                "operationId": "massmedia_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/massmedia\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | massmedia"
                ],
                "summary": "massmedia restore",
                "operationId": "massmedia_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports index",
                "operationId": "reports_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "parent_name",
                                "count",
                                "amount",
                                "created_at",
                                "updated_at",
                                "report_hasmany_category_relationship"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[parent_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[category_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[count]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "10,,20"
                        }
                    },
                    {
                        "name": "filters[status]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerReportsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports store",
                "operationId": "reports_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReportsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/create": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports create",
                "operationId": "reports_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/{id}": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports show",
                "operationId": "reports_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports update",
                "operationId": "reports_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReportsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports delete",
                "operationId": "reports_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports single update",
                "operationId": "reports_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "parent_name",
                                "category_name",
                                "count",
                                "amount",
                                "status",
                                "report_hasmany_category_relationship",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parent_name",
                                    "category_name",
                                    "count",
                                    "amount",
                                    "status",
                                    "report_hasmany_category_relationship",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReportsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports edit",
                "operationId": "reports_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReportsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/relation": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports relation",
                "operationId": "reports_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reports\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | reports"
                ],
                "summary": "reports restore",
                "operationId": "reports_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions index",
                "operationId": "regions_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerRegionsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions store",
                "operationId": "regions_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRegionsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRegionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/create": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions create",
                "operationId": "regions_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions show",
                "operationId": "regions_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRegionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions update",
                "operationId": "regions_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRegionsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRegionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions delete",
                "operationId": "regions_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions single update",
                "operationId": "regions_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerRegionsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRegionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions edit",
                "operationId": "regions_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerRegionsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/relation": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions relation",
                "operationId": "regions_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/regions\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | regions"
                ],
                "summary": "regions restore",
                "operationId": "regions_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance index",
                "operationId": "compliance_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerComplianceBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance store",
                "operationId": "compliance_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/create": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance create",
                "operationId": "compliance_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance show",
                "operationId": "compliance_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance update",
                "operationId": "compliance_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance delete",
                "operationId": "compliance_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance single update",
                "operationId": "compliance_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": []
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": []
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance edit",
                "operationId": "compliance_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/relation": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance relation",
                "operationId": "compliance_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliance"
                ],
                "summary": "compliance restore",
                "operationId": "compliance_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system_notifications index",
                "operationId": "system_notifications_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "message",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[message]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications store",
                "operationId": "system-notifications_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSystemNotificationsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/create": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system_notifications create",
                "operationId": "system_notifications_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/{id}": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications show",
                "operationId": "system-notifications_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications update",
                "operationId": "system-notifications_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSystemNotificationsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications delete",
                "operationId": "system-notifications_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications single update",
                "operationId": "system-notifications_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "message"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "message"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerSystemNotificationsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications edit",
                "operationId": "system-notifications_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerSystemNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/relation": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications relation",
                "operationId": "system-notifications_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/system-notifications\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | system-notifications"
                ],
                "summary": "system-notifications restore",
                "operationId": "system-notifications_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news_notifications index",
                "operationId": "news_notifications_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "message",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[message]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications store",
                "operationId": "news-notifications_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNewsNotificationsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/create": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news_notifications create",
                "operationId": "news_notifications_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/{id}": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications show",
                "operationId": "news-notifications_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications update",
                "operationId": "news-notifications_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNewsNotificationsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications delete",
                "operationId": "news-notifications_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications single update",
                "operationId": "news-notifications_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "message"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "message"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerNewsNotificationsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications edit",
                "operationId": "news-notifications_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerNewsNotificationsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/relation": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications relation",
                "operationId": "news-notifications_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/news-notifications\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | news-notifications"
                ],
                "summary": "news-notifications restore",
                "operationId": "news-notifications_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances index",
                "operationId": "compliances_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "compliance_type_id",
                                "text",
                                "user_id",
                                "task_id",
                                "created_at",
                                "updated_at",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[compliance_type_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCompliancesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances store",
                "operationId": "compliances_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/create": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances create",
                "operationId": "compliances_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances show",
                "operationId": "compliances_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances update",
                "operationId": "compliances_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances delete",
                "operationId": "compliances_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances single update",
                "operationId": "compliances_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "compliance_type_id",
                                "text",
                                "user_id",
                                "task_id",
                                "created_at",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "compliance_type_id",
                                    "text",
                                    "user_id",
                                    "task_id",
                                    "created_at",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCompliancesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances edit",
                "operationId": "compliances_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCompliancesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/relation": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances relation",
                "operationId": "compliances_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliances\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliances"
                ],
                "summary": "compliances restore",
                "operationId": "compliances_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom_fields_values index",
                "operationId": "custom_fields_values_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "task_id",
                                "custom_field_id",
                                "value",
                                "created_at",
                                "updated_at",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[custom_field_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[value]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values store",
                "operationId": "custom-fields-values_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/create": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom_fields_values create",
                "operationId": "custom_fields_values_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values show",
                "operationId": "custom-fields-values_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values update",
                "operationId": "custom-fields-values_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values delete",
                "operationId": "custom-fields-values_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values single update",
                "operationId": "custom-fields-values_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "task_id",
                                "custom_field_id",
                                "value",
                                "created_at",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "task_id",
                                    "custom_field_id",
                                    "value",
                                    "created_at",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerCustomFieldsValuesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values edit",
                "operationId": "custom-fields-values_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerCustomFieldsValuesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/relation": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values relation",
                "operationId": "custom-fields-values_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/custom-fields-values\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | custom-fields-values"
                ],
                "summary": "custom-fields-values restore",
                "operationId": "custom-fields-values_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews index",
                "operationId": "reviews_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "user_id",
                                "description",
                                "good_bad",
                                "reviewer_id",
                                "task_id",
                                "as_performer",
                                "created_at",
                                "updated_at",
                                "reviewer_name",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[good_bad]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[reviewer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[as_performer]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[reviewer_name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerReviewsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews store",
                "operationId": "reviews_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReviewsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/create": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews create",
                "operationId": "reviews_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews show",
                "operationId": "reviews_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews update",
                "operationId": "reviews_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReviewsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews delete",
                "operationId": "reviews_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews single update",
                "operationId": "reviews_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "user_id",
                                "description",
                                "good_bad",
                                "created_at",
                                "reviewer_id",
                                "as_performer",
                                "task_id",
                                "reviewer_name",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user_id",
                                    "description",
                                    "good_bad",
                                    "created_at",
                                    "reviewer_id",
                                    "as_performer",
                                    "task_id",
                                    "reviewer_name",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerReviewsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews edit",
                "operationId": "reviews_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerReviewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/relation": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews relation",
                "operationId": "reviews_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/reviews\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | reviews"
                ],
                "summary": "reviews restore",
                "operationId": "reviews_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user_views index",
                "operationId": "user_views_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "user_id",
                                "performer_id"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUserViewsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views store",
                "operationId": "user-views_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/create": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user_views create",
                "operationId": "user_views_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views show",
                "operationId": "user-views_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views update",
                "operationId": "user-views_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views delete",
                "operationId": "user-views_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views single update",
                "operationId": "user-views_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "created_at",
                                "user_id",
                                "performer_id"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "created_at",
                                    "user_id",
                                    "performer_id"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserViewsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views edit",
                "operationId": "user-views_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserViewsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/relation": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views relation",
                "operationId": "user-views_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-views\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | user-views"
                ],
                "summary": "user-views restore",
                "operationId": "user-views_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users_verify index",
                "operationId": "users_verify_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "user_id",
                                "token",
                                "created_at",
                                "updated_at",
                                "sms_otp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[token]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[sms_otp]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUsersVerifyBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify store",
                "operationId": "users-verify_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersVerifyStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersVerifyReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/create": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users_verify create",
                "operationId": "users_verify_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/{id}": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify show",
                "operationId": "users-verify_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersVerifyReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify update",
                "operationId": "users-verify_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersVerifyUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersVerifyReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify delete",
                "operationId": "users-verify_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify single update",
                "operationId": "users-verify_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "token",
                                "created_at",
                                "sms_otp"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "token",
                                    "created_at",
                                    "sms_otp"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUsersVerifySingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersVerifyReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify edit",
                "operationId": "users-verify_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUsersVerifyReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/relation": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify relation",
                "operationId": "users-verify_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/users-verify\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | users-verify"
                ],
                "summary": "users-verify restore",
                "operationId": "users-verify_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance_types index",
                "operationId": "compliance_types_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerComplianceTypesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types store",
                "operationId": "compliance-types_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/create": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance_types create",
                "operationId": "compliance_types_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types show",
                "operationId": "compliance-types_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types update",
                "operationId": "compliance-types_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types delete",
                "operationId": "compliance-types_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types single update",
                "operationId": "compliance-types_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerComplianceTypesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types edit",
                "operationId": "compliance-types_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerComplianceTypesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/relation": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types relation",
                "operationId": "compliance-types_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/compliance-types\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | compliance-types"
                ],
                "summary": "compliance-types restore",
                "operationId": "compliance-types_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user_expenses index",
                "operationId": "user_expenses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "user_id",
                                "task_id",
                                "client_id",
                                "amount",
                                "created_at",
                                "updated_at",
                                "user_expense_belongsto_user_relationship",
                                "user_expense_belongsto_task_relationship",
                                "user_expense_belongsto_user_relationship_1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[task_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[client_id][]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "filters[amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerUserExpensesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses store",
                "operationId": "user-expenses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/create": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user_expenses create",
                "operationId": "user_expenses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses show",
                "operationId": "user-expenses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses update",
                "operationId": "user-expenses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses delete",
                "operationId": "user-expenses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses single update",
                "operationId": "user-expenses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "user_id",
                                "task_id",
                                "client_id",
                                "amount",
                                "created_at",
                                "user_expense_belongsto_user_relationship",
                                "user_expense_belongsto_task_relationship",
                                "user_expense_belongsto_user_relationship_1"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user_id",
                                    "task_id",
                                    "client_id",
                                    "amount",
                                    "created_at",
                                    "user_expense_belongsto_user_relationship",
                                    "user_expense_belongsto_task_relationship",
                                    "user_expense_belongsto_user_relationship_1"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerUserExpensesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses edit",
                "operationId": "user-expenses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerUserExpensesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/relation": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses relation",
                "operationId": "user-expenses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/user-expenses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | user-expenses"
                ],
                "summary": "user-expenses restore",
                "operationId": "user-expenses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task_responses index",
                "operationId": "task_responses_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "description",
                                "user_id",
                                "task_id",
                                "notificate",
                                "price",
                                "performer_id",
                                "created_at",
                                "updated_at",
                                "not_free",
                                "deleted_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "showSoftDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[description]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[user_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[task_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[performer_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[not_free][]",
                        "in": "query",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    0,
                                    1
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[deleted_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerTaskResponsesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses store",
                "operationId": "task-responses_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/create": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task_responses create",
                "operationId": "task_responses_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses show",
                "operationId": "task-responses_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses update",
                "operationId": "task-responses_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses delete",
                "operationId": "task-responses_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses single update",
                "operationId": "task-responses_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "description",
                                "user_id",
                                "task_id",
                                "price",
                                "performer_id",
                                "created_at",
                                "not_free",
                                "deleted_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "description",
                                    "user_id",
                                    "task_id",
                                    "price",
                                    "performer_id",
                                    "created_at",
                                    "not_free",
                                    "deleted_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerTaskResponsesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses edit",
                "operationId": "task-responses_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerTaskResponsesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/relation": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses relation",
                "operationId": "task-responses_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/task-responses\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | task-responses"
                ],
                "summary": "task-responses restore",
                "operationId": "task-responses_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog_new index",
                "operationId": "blog_new_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "desc",
                                "text",
                                "img",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[desc]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[img]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerBlogNewBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new store",
                "operationId": "blog-new_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/create": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog_new create",
                "operationId": "blog_new_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new show",
                "operationId": "blog-new_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new update",
                "operationId": "blog-new_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new delete",
                "operationId": "blog-new_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new single update",
                "operationId": "blog-new_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "text",
                                "desc",
                                "img",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "text",
                                    "desc",
                                    "img",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerBlogNewSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new edit",
                "operationId": "blog-new_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerBlogNewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/relation": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new relation",
                "operationId": "blog-new_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/blog-new\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | blog-new"
                ],
                "summary": "blog-new restore",
                "operationId": "blog-new_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents index",
                "operationId": "contents_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[page]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "created_at",
                                "updated_at",
                                "key",
                                "page",
                                "text_uz",
                                "text_ru",
                                "image"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[updated_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[key]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text_uz]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text_ru]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerContentsBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents store",
                "operationId": "contents_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/create": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents create",
                "operationId": "contents_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents show",
                "operationId": "contents_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents update",
                "operationId": "contents_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents delete",
                "operationId": "contents_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents single update",
                "operationId": "contents_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "created_at",
                                "updated_at",
                                "key",
                                "page",
                                "text_uz",
                                "text_ru",
                                "image"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "created_at",
                                    "updated_at",
                                    "key",
                                    "page",
                                    "text_uz",
                                    "text_ru",
                                    "image"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerContentsSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents edit",
                "operationId": "contents_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerContentsReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/relation": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents relation",
                "operationId": "contents_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/contents\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | contents"
                ],
                "summary": "contents restore",
                "operationId": "contents_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare index",
                "operationId": "prepare_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "click_trans_id",
                                "service_id",
                                "click_paydoc_id",
                                "merchant_trans_id",
                                "amount",
                                "action",
                                "error",
                                "error_note",
                                "sign_time",
                                "sign_string",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[click_trans_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[service_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[click_paydoc_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[merchant_trans_id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[amount]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[action]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[error]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[error_note]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sign_time]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[sign_string]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPrepareBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare store",
                "operationId": "prepare_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrepareStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrepareReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/create": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare create",
                "operationId": "prepare_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/{id}": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare show",
                "operationId": "prepare_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrepareReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare update",
                "operationId": "prepare_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrepareUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrepareReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare delete",
                "operationId": "prepare_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare single update",
                "operationId": "prepare_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "click_trans_id",
                                "service_id",
                                "click_paydoc_id",
                                "merchant_trans_id",
                                "amount",
                                "action",
                                "error",
                                "error_note",
                                "sign_time",
                                "sign_string",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "click_trans_id",
                                    "service_id",
                                    "click_paydoc_id",
                                    "merchant_trans_id",
                                    "amount",
                                    "action",
                                    "error",
                                    "error_note",
                                    "sign_time",
                                    "sign_string",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrepareSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrepareReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare edit",
                "operationId": "prepare_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrepareReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/relation": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare relation",
                "operationId": "prepare_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/prepare\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | prepare"
                ],
                "summary": "prepare restore",
                "operationId": "prepare_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies index",
                "operationId": "privacies_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "title",
                                "text",
                                "created_at",
                                "updated_at"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[title]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerPrivaciesBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies store",
                "operationId": "privacies_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/create": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies create",
                "operationId": "privacies_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies show",
                "operationId": "privacies_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies update",
                "operationId": "privacies_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies delete",
                "operationId": "privacies_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/single\/{field}": {
            "put": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies single update",
                "operationId": "privacies_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "title",
                                "text",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "title",
                                    "text",
                                    "created_at"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerPrivaciesSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies edit",
                "operationId": "privacies_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerPrivaciesReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/relation": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies relation",
                "operationId": "privacies_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/privacies\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | privacies"
                ],
                "summary": "privacies restore",
                "operationId": "privacies_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer_review index",
                "operationId": "footer_review_index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Global search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort by column",
                        "required": false,
                        "schema": {
                            "enum": [
                                "id",
                                "name",
                                "text",
                                "image",
                                "created_at",
                                "updated_at",
                                "review_type",
                                "site_link"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort by direction",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[id]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[name]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[text]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[image]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters[created_at]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "2020-01-01 00:00,,2021-06-01 00:00"
                        }
                    },
                    {
                        "name": "filters[review_type][]",
                        "in": "query",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "enum": [
                                    1,
                                    2
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "filters[site_link]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoyagerFooterReviewBrowseResource"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#\/components\/schemas\/Links"
                                        },
                                        "meta": {
                                            "$ref": "#\/components\/schemas\/Meta"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review store",
                "operationId": "footer-review_store",
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewStoreRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/create": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer_review create",
                "operationId": "footer_review_create",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review show",
                "operationId": "footer-review_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review update",
                "operationId": "footer-review_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review delete",
                "operationId": "footer-review_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/single\/{field}": {
            "post": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review single update",
                "operationId": "footer-review_single_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "name",
                                "text",
                                "image",
                                "created_at",
                                "review_type",
                                "site_link"
                            ]
                        }
                    },
                    {
                        "name": "fields[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "name",
                                    "text",
                                    "image",
                                    "created_at",
                                    "review_type",
                                    "site_link"
                                ]
                            }
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#\/components\/requestBodies\/VoyagerFooterReviewSingleUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/edit": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review edit",
                "operationId": "footer-review_edit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoyagerFooterReviewReadResource"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/relation": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review relation",
                "operationId": "footer-review_relation",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "\/api\/footer-review\/{id}\/restore": {
            "get": {
                "tags": [
                    "Core | footer-review"
                ],
                "summary": "footer-review restore",
                "operationId": "footer-review_restore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "VoyagerUsersBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "active_task": {
                        "type": "string",
                        "description": "Active Task"
                    },
                    "active_step": {
                        "type": "string",
                        "description": "Active Step"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "roles"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone Number"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "work_experience": {
                        "type": "string",
                        "description": "Work Experience"
                    },
                    "born_date": {
                        "type": "string",
                        "description": "Born Date"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    }
                }
            },
            "VoyagerUsersReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "role_id": {
                        "type": "string",
                        "description": "Role"
                    },
                    "user_belongsto_role_relationship": {
                        "type": "integer",
                        "description": "roles"
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone Number"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "work_experience": {
                        "type": "string",
                        "description": "Work Experience"
                    },
                    "born_date": {
                        "type": "string",
                        "description": "Born Date"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    }
                }
            },
            "VoyagerMenusBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerMenusReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    }
                }
            },
            "VoyagerRolesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerRolesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display Name"
                    }
                }
            },
            "VoyagerCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "ico": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "max": {
                        "type": "integer",
                        "description": "Max"
                    },
                    "double_address": {
                        "type": "string",
                        "description": "Double Address"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "parent_id": {
                        "enum": [
                            ""
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\"\n}"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "custom_route_title": {
                        "type": "string",
                        "description": "Custom Route Title"
                    },
                    "order": {
                        "type": "string",
                        "description": "Order"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "ico": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "max": {
                        "type": "integer",
                        "description": "Max"
                    },
                    "min": {
                        "type": "integer",
                        "description": "Min"
                    },
                    "double_address": {
                        "type": "string",
                        "description": "Double Address"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPagesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerPagesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "excerpt": {
                        "type": "string",
                        "description": "Excerpt"
                    },
                    "body": {
                        "type": "string",
                        "description": "Body"
                    },
                    "slug": {
                        "type": "string",
                        "description": "Slug"
                    },
                    "meta_description": {
                        "type": "string",
                        "description": "Meta Description"
                    },
                    "meta_keywords": {
                        "type": "string",
                        "description": "Meta Keywords"
                    },
                    "status": {
                        "enum": [
                            "INACTIVE",
                            "ACTIVE"
                        ],
                        "type": "string",
                        "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerSocialsBrowseResource": {
                "type": "object",
                "properties": {
                    "social_name": {
                        "type": "string",
                        "description": "Social Name"
                    },
                    "social_link": {
                        "type": "string",
                        "description": "Social Link"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "social_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerSocialsReadResource": {
                "type": "object",
                "properties": {
                    "social_name": {
                        "type": "string",
                        "description": "Social Name"
                    },
                    "social_link": {
                        "type": "string",
                        "description": "Social Link"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "social_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsBrowseResource": {
                "type": "object",
                "properties": {
                    "custom_field_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "Категория"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Название"
                    },
                    "data_type": {
                        "enum": [
                            "",
                            "string",
                            "int",
                            "double"
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                    },
                    "required": {
                        "type": "string",
                        "description": "Required"
                    },
                    "type": {
                        "type": "string",
                        "description": "Input Type"
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regex"
                    },
                    "label": {
                        "type": "string",
                        "description": "Input Label"
                    },
                    "min": {
                        "type": "string",
                        "description": "Min"
                    },
                    "placeholder": {
                        "type": "string",
                        "description": "Input Placeholder"
                    },
                    "max": {
                        "type": "string",
                        "description": "Max"
                    },
                    "route": {
                        "enum": [
                            "name",
                            "address",
                            "custom",
                            "date",
                            "budget",
                            "notes",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Последовательность"
                    },
                    "values": {
                        "type": "string",
                        "description": "In Options Default value"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsReadResource": {
                "type": "object",
                "properties": {
                    "custom_field_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "Категория"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Название"
                    },
                    "description": {
                        "type": "string",
                        "description": "Описания "
                    },
                    "data_type": {
                        "enum": [
                            "",
                            "string",
                            "int",
                            "double"
                        ],
                        "type": "string",
                        "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                    },
                    "required": {
                        "type": "string",
                        "description": "Required"
                    },
                    "name": {
                        "type": "string",
                        "description": "Input Name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Input Type"
                    },
                    "regex": {
                        "type": "string",
                        "description": "Regex"
                    },
                    "label": {
                        "type": "string",
                        "description": "Input Label"
                    },
                    "min": {
                        "type": "string",
                        "description": "Min"
                    },
                    "placeholder": {
                        "type": "string",
                        "description": "Input Placeholder"
                    },
                    "max": {
                        "type": "string",
                        "description": "Max"
                    },
                    "route": {
                        "enum": [
                            "name",
                            "address",
                            "custom",
                            "date",
                            "budget",
                            "notes",
                            "contacts"
                        ],
                        "type": "string",
                        "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Последовательность"
                    },
                    "values": {
                        "type": "string",
                        "description": "In Options Default value"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerTasksBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "name": {
                        "type": "string",
                        "description": "Имя"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "date_type": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Дата начала",
                        "example": "2021-05-17 00:00"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Дата окончания",
                        "example": "2021-05-17 00:00"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Бюджет"
                    },
                    "description": {
                        "type": "string",
                        "description": "Описание"
                    },
                    "photos": {
                        "type": "string",
                        "description": "Фотографии"
                    },
                    "status": {
                        "enum": [
                            1,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "performer_review": {
                        "type": "string",
                        "description": "Performer Review"
                    },
                    "task_hasmany_custom_field_relationship": {
                        "type": "integer",
                        "description": "custom_fields"
                    },
                    "oplata": {
                        "type": "string",
                        "description": "Oplata"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "docs": {
                        "type": "string",
                        "description": "Docs"
                    },
                    "views": {
                        "type": "string",
                        "description": "Views"
                    },
                    "responses_count": {
                        "type": "string",
                        "description": "Responses Count"
                    },
                    "is_phone_verified": {
                        "type": "string",
                        "description": "Is Phone Verified"
                    },
                    "verify_code": {
                        "type": "string",
                        "description": "Verify Code"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_completed_reason": {
                        "type": "string",
                        "description": "Not Completed Reason"
                    }
                }
            },
            "VoyagerTasksReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "name": {
                        "type": "string",
                        "description": "Имя"
                    },
                    "remote": {
                        "type": "string",
                        "description": "Remote"
                    },
                    "date_type": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                    },
                    "start_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Дата начала",
                        "example": "2021-05-17 00:00"
                    },
                    "end_date": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Дата окончания",
                        "example": "2021-05-17 00:00"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Бюджет"
                    },
                    "description": {
                        "type": "string",
                        "description": "Описание"
                    },
                    "photos": {
                        "type": "string",
                        "description": "Фотографии"
                    },
                    "status": {
                        "enum": [
                            1,
                            3,
                            4,
                            5,
                            6
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone"
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Category Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "performer_review": {
                        "type": "string",
                        "description": "Performer Review"
                    },
                    "task_hasmany_custom_field_relationship": {
                        "type": "integer",
                        "description": "custom_fields"
                    },
                    "oplata": {
                        "type": "string",
                        "description": "Oplata"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_belongsto_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "docs": {
                        "type": "string",
                        "description": "Docs"
                    },
                    "views": {
                        "type": "string",
                        "description": "Views"
                    },
                    "responses_count": {
                        "type": "string",
                        "description": "Responses Count"
                    },
                    "is_phone_verified": {
                        "type": "string",
                        "description": "Is Phone Verified"
                    },
                    "verify_code": {
                        "type": "string",
                        "description": "Verify Code"
                    },
                    "verify_expiration": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Verify Expiration",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_completed_reason": {
                        "type": "string",
                        "description": "Not Completed Reason"
                    }
                }
            },
            "VoyagerNotificationsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "notification_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "notification_hasmany_service_relationship": {
                        "type": "integer",
                        "description": "services"
                    },
                    "cat_id": {
                        "type": "string",
                        "description": "Cat Id"
                    },
                    "name_task": {
                        "type": "string",
                        "description": "Name Task"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is Read"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerNotificationsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "notification_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "notification_hasmany_service_relationship": {
                        "type": "integer",
                        "description": "services"
                    },
                    "cat_id": {
                        "type": "string",
                        "description": "Cat Id"
                    },
                    "name_task": {
                        "type": "string",
                        "description": "Name Task"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type"
                    },
                    "is_read": {
                        "type": "string",
                        "description": "Is Read"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerAddressesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude"
                    },
                    "default": {
                        "type": "string",
                        "description": "Default"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "address_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerAddressesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Latitude"
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Longitude"
                    },
                    "default": {
                        "type": "string",
                        "description": "Default"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "address_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerWalletBalancesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "wallet_balance_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "balance": {
                        "type": "string",
                        "description": "Balance"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    }
                }
            },
            "VoyagerWalletBalancesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "wallet_balance_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "balance": {
                        "type": "string",
                        "description": "Balance"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_by": {
                        "type": "string",
                        "description": "Deleted By"
                    },
                    "updated_by": {
                        "type": "string",
                        "description": "Updated By"
                    },
                    "created_by": {
                        "type": "string",
                        "description": "Created By"
                    }
                }
            },
            "VoyagerPermissionsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "table_name": {
                        "type": "string",
                        "description": "Table Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPermissionsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "table_name": {
                        "type": "string",
                        "description": "Table Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFaqCategoriesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "cat_author": {
                        "type": "string",
                        "description": "Cat Author"
                    },
                    "num_quest": {
                        "type": "integer",
                        "description": "Num Quest"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "logo": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerFaqCategoriesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "cat_author": {
                        "type": "string",
                        "description": "Cat Author"
                    },
                    "num_quest": {
                        "type": "integer",
                        "description": "Num Quest"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "logo": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerFaqsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id"
                    },
                    "question": {
                        "type": "string",
                        "description": "Question"
                    },
                    "q_descript": {
                        "type": "string",
                        "description": "Q Descript"
                    },
                    "answer_text": {
                        "type": "string",
                        "description": "Answer Text"
                    },
                    "category_id": {
                        "type": "integer",
                        "description": "Category Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "faq_belongsto_faq_category_relationship": {
                        "type": "integer",
                        "description": "faq_categories"
                    }
                }
            },
            "VoyagerFaqsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id"
                    },
                    "question": {
                        "type": "string",
                        "description": "Question"
                    },
                    "q_descript": {
                        "type": "string",
                        "description": "Q Descript"
                    },
                    "answer_text": {
                        "type": "string",
                        "description": "Answer Text"
                    },
                    "category_id": {
                        "type": "integer",
                        "description": "Category Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "faq_belongsto_faq_category_relationship": {
                        "type": "integer",
                        "description": "faq_categories"
                    }
                }
            },
            "VoyagerMassmediaBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    }
                }
            },
            "VoyagerMassmediaReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link"
                    }
                }
            },
            "VoyagerReportsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "parent_name": {
                        "type": "string",
                        "description": "Parent Name"
                    },
                    "category_name": {
                        "type": "string",
                        "description": "Category Name"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Count"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status"
                    },
                    "report_hasmany_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerReportsReadResource": {
                "type": "object",
                "properties": {
                    "parent_name": {
                        "type": "string",
                        "description": "Parent Name"
                    },
                    "category_name": {
                        "type": "string",
                        "description": "Category Name"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Count"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status"
                    },
                    "report_hasmany_category_relationship": {
                        "type": "integer",
                        "description": "categories"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerRegionsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerRegionsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerComplianceBrowseResource": {
                "type": "object",
                "properties": {}
            },
            "VoyagerComplianceReadResource": {
                "type": "object",
                "properties": {}
            },
            "VoyagerSystemNotificationsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Заголовок"
                    },
                    "message": {
                        "type": "string",
                        "description": "Сообщение"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerSystemNotificationsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Заголовок"
                    },
                    "message": {
                        "type": "string",
                        "description": "Сообщение"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerNewsNotificationsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Заголовок"
                    },
                    "message": {
                        "type": "string",
                        "description": "Сообщение"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerNewsNotificationsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Заголовок"
                    },
                    "message": {
                        "type": "string",
                        "description": "Сообщение"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCompliancesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "compliance_type_id": {
                        "type": "string",
                        "description": "Compliance Type Id"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCompliancesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "compliance_type_id": {
                        "type": "string",
                        "description": "Compliance Type Id"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsValuesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "custom_field_id": {
                        "type": "string",
                        "description": "Custom Field Id"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerCustomFieldsValuesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "custom_field_id": {
                        "type": "string",
                        "description": "Custom Field Id"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerReviewsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "good_bad": {
                        "type": "string",
                        "description": "Good Bad"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "reviewer_id": {
                        "type": "string",
                        "description": "Reviewer Id"
                    },
                    "as_performer": {
                        "type": "string",
                        "description": "As Performer"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "reviewer_name": {
                        "type": "string",
                        "description": "Reviewer Name"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerReviewsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "good_bad": {
                        "type": "string",
                        "description": "Good Bad"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "reviewer_id": {
                        "type": "string",
                        "description": "Reviewer Id"
                    },
                    "as_performer": {
                        "type": "string",
                        "description": "As Performer"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "reviewer_name": {
                        "type": "string",
                        "description": "Reviewer Name"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerUserViewsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    }
                }
            },
            "VoyagerUserViewsReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    }
                }
            },
            "VoyagerUsersVerifyBrowseResource": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "sms_otp": {
                        "type": "string",
                        "description": "Sms Otp"
                    }
                }
            },
            "VoyagerUsersVerifyReadResource": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "sms_otp": {
                        "type": "string",
                        "description": "Sms Otp"
                    }
                }
            },
            "VoyagerComplianceTypesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerComplianceTypesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerUserExpensesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "client_id": {
                        "type": "string",
                        "description": "Client Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_expense_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "user_expense_belongsto_task_relationship": {
                        "type": "integer",
                        "description": "tasks"
                    },
                    "user_expense_belongsto_user_relationship_1": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerUserExpensesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "client_id": {
                        "type": "string",
                        "description": "Client Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "user_expense_belongsto_user_relationship": {
                        "type": "integer",
                        "description": "users"
                    },
                    "user_expense_belongsto_task_relationship": {
                        "type": "integer",
                        "description": "tasks"
                    },
                    "user_expense_belongsto_user_relationship_1": {
                        "type": "integer",
                        "description": "users"
                    }
                }
            },
            "VoyagerTaskResponsesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "price": {
                        "type": "string",
                        "description": "Price"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_free": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerTaskResponsesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User Id"
                    },
                    "task_id": {
                        "type": "string",
                        "description": "Task Id"
                    },
                    "price": {
                        "type": "string",
                        "description": "Price"
                    },
                    "performer_id": {
                        "type": "string",
                        "description": "Performer Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "not_free": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "string",
                        "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                    },
                    "deleted_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Deleted At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerBlogNewBrowseResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Desc"
                    },
                    "img": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerBlogNewReadResource": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Desc"
                    },
                    "img": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerContentsBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page"
                    },
                    "text_uz": {
                        "type": "string",
                        "description": "Text Uz"
                    },
                    "text_ru": {
                        "type": "string",
                        "description": "Text Ru"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerContentsReadResource": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "updated_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Updated At",
                        "example": "2021-05-17 00:00"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key"
                    },
                    "page": {
                        "type": "string",
                        "description": "Page"
                    },
                    "text_uz": {
                        "type": "string",
                        "description": "Text Uz"
                    },
                    "text_ru": {
                        "type": "string",
                        "description": "Text Ru"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    }
                }
            },
            "VoyagerPrepareBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "click_trans_id": {
                        "type": "string",
                        "description": "Click Trans Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "click_paydoc_id": {
                        "type": "string",
                        "description": "Click Paydoc Id"
                    },
                    "merchant_trans_id": {
                        "type": "string",
                        "description": "Merchant Trans Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error"
                    },
                    "error_note": {
                        "type": "string",
                        "description": "Error Note"
                    },
                    "sign_time": {
                        "type": "string",
                        "description": "Sign Time"
                    },
                    "sign_string": {
                        "type": "string",
                        "description": "Sign String"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPrepareReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "click_trans_id": {
                        "type": "string",
                        "description": "Click Trans Id"
                    },
                    "service_id": {
                        "type": "string",
                        "description": "Service Id"
                    },
                    "click_paydoc_id": {
                        "type": "string",
                        "description": "Click Paydoc Id"
                    },
                    "merchant_trans_id": {
                        "type": "string",
                        "description": "Merchant Trans Id"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error"
                    },
                    "error_note": {
                        "type": "string",
                        "description": "Error Note"
                    },
                    "sign_time": {
                        "type": "string",
                        "description": "Sign Time"
                    },
                    "sign_string": {
                        "type": "string",
                        "description": "Sign String"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPrivaciesBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerPrivaciesReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    }
                }
            },
            "VoyagerFooterReviewBrowseResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "review_type": {
                        "enum": [
                            1,
                            2
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                    },
                    "site_link": {
                        "type": "string",
                        "description": "Site Link"
                    }
                }
            },
            "VoyagerFooterReviewReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name"
                    },
                    "text": {
                        "type": "string",
                        "description": "Text"
                    },
                    "image": {
                        "type": "string",
                        "description": "jpg,jpeg,png",
                        "format": "binary"
                    },
                    "created_at": {
                        "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                        "type": "date-time",
                        "description": "Created At",
                        "example": "2021-05-17 00:00"
                    },
                    "review_type": {
                        "enum": [
                            1,
                            2
                        ],
                        "type": "string",
                        "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                    },
                    "site_link": {
                        "type": "string",
                        "description": "Site Link"
                    }
                }
            }
        },
        "requestBodies": {
            "VoyagerUsersStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "password": {
                                    "type": "password",
                                    "description": "Password"
                                },
                                "avatar": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "role_id": {
                                    "type": "string",
                                    "description": "Role"
                                },
                                "user_belongsto_role_relationship": {
                                    "type": "integer",
                                    "description": "roles"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Phone Number"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "work_experience": {
                                    "type": "string",
                                    "description": "Work Experience"
                                },
                                "born_date": {
                                    "type": "string",
                                    "description": "Born Date"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMenusSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRolesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "id": {
                                    "type": "integer",
                                    "description": "ID"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Display Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCategoriesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_id": {
                                    "enum": [
                                        ""
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\"\n}"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "custom_route_title": {
                                    "type": "string",
                                    "description": "Custom Route Title"
                                },
                                "order": {
                                    "type": "string",
                                    "description": "Order"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "ico": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "max": {
                                    "type": "integer",
                                    "description": "Max"
                                },
                                "min": {
                                    "type": "integer",
                                    "description": "Min"
                                },
                                "double_address": {
                                    "type": "string",
                                    "description": "Double Address"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPagesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "excerpt": {
                                    "type": "string",
                                    "description": "Excerpt"
                                },
                                "body": {
                                    "type": "string",
                                    "description": "Body"
                                },
                                "slug": {
                                    "type": "string",
                                    "description": "Slug"
                                },
                                "meta_description": {
                                    "type": "string",
                                    "description": "Meta Description"
                                },
                                "meta_keywords": {
                                    "type": "string",
                                    "description": "Meta Keywords"
                                },
                                "status": {
                                    "enum": [
                                        "INACTIVE",
                                        "ACTIVE"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"INACTIVE\": \"INACTIVE\",\n    \"ACTIVE\": \"ACTIVE\"\n}"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSocialsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "social_name": {
                                    "type": "string",
                                    "description": "Social Name"
                                },
                                "social_link": {
                                    "type": "string",
                                    "description": "Social Link"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "social_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSocialsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "social_name": {
                                    "type": "string",
                                    "description": "Social Name"
                                },
                                "social_link": {
                                    "type": "string",
                                    "description": "Social Link"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "social_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSocialsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "social_name": {
                                    "type": "string",
                                    "description": "Social Name"
                                },
                                "social_link": {
                                    "type": "string",
                                    "description": "Social Link"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "social_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "Категория"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Название"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описания "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "Последовательность"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "options_ru": {
                                    "type": "string",
                                    "description": "Options Ru"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "Категория"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Название"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описания "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "Последовательность"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "custom_field_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "Категория"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Название"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описания "
                                },
                                "data_type": {
                                    "enum": [
                                        "",
                                        "string",
                                        "int",
                                        "double"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"\": \"-- None --\",\n    \"string\": \"string\",\n    \"int\": \"int\",\n    \"double\": \"double\"\n}"
                                },
                                "required": {
                                    "type": "string",
                                    "description": "Required"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Input Name"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Input Type"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "Regex"
                                },
                                "label": {
                                    "type": "string",
                                    "description": "Input Label"
                                },
                                "min": {
                                    "type": "string",
                                    "description": "Min"
                                },
                                "placeholder": {
                                    "type": "string",
                                    "description": "Input Placeholder"
                                },
                                "max": {
                                    "type": "string",
                                    "description": "Max"
                                },
                                "options": {
                                    "type": "string",
                                    "description": "Options"
                                },
                                "route": {
                                    "enum": [
                                        "name",
                                        "address",
                                        "custom",
                                        "date",
                                        "budget",
                                        "notes",
                                        "contacts"
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"name\": \"name\",\n    \"address\": \"address\",\n    \"custom\": \"custom\",\n    \"date\": \"date\",\n    \"budget\": \"budget\",\n    \"notes\": \"notes\",\n    \"contacts\": \"contacts\"\n}"
                                },
                                "order": {
                                    "type": "integer",
                                    "description": "Последовательность"
                                },
                                "values": {
                                    "type": "string",
                                    "description": "In Options Default value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Имя"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата начала",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата окончания",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Бюджет"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описание"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "Фотографии"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Имя"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата начала",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата окончания",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Бюджет"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описание"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "Фотографии"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTasksSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Имя"
                                },
                                "remote": {
                                    "type": "string",
                                    "description": "Remote"
                                },
                                "date_type": {
                                    "enum": [
                                        1,
                                        2,
                                        3
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041d\\u0430\\u0447\\u0430\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"2\": \"\\u0417\\u0430\\u043a\\u043e\\u043d\\u0447\\u0438\\u0442\\u044c \\u0440\\u0430\\u0431\\u043e\\u0442\\u0443\",\n    \"3\": \"\\u0423\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u0435\\u0440\\u0438\\u043e\\u0434\"\n}"
                                },
                                "start_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата начала",
                                    "example": "2021-05-17 00:00"
                                },
                                "end_date": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Дата окончания",
                                    "example": "2021-05-17 00:00"
                                },
                                "budget": {
                                    "type": "integer",
                                    "description": "Бюджет"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Описание"
                                },
                                "photos": {
                                    "type": "string",
                                    "description": "Фотографии"
                                },
                                "status": {
                                    "enum": [
                                        1,
                                        3,
                                        4,
                                        5,
                                        6
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"3\": \"\\u0412 \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\",\n    \"4\": \"\\u0417\\u0430\\u043a\\u0440\\u044b\\u0442\\u043e\",\n    \"5\": \"\\u041d\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u043e\",\n    \"6\": \"\\u041e\\u0442\\u043c\\u0435\\u043d\\u0435\\u043d\"\n}"
                                },
                                "phone": {
                                    "type": "string",
                                    "description": "Phone"
                                },
                                "category_id": {
                                    "type": "string",
                                    "description": "Category Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "performer_review": {
                                    "type": "string",
                                    "description": "Performer Review"
                                },
                                "task_hasmany_custom_field_relationship": {
                                    "type": "integer",
                                    "description": "custom_fields"
                                },
                                "oplata": {
                                    "type": "string",
                                    "description": "Oplata"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_belongsto_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "docs": {
                                    "type": "string",
                                    "description": "Docs"
                                },
                                "views": {
                                    "type": "string",
                                    "description": "Views"
                                },
                                "responses_count": {
                                    "type": "string",
                                    "description": "Responses Count"
                                },
                                "is_phone_verified": {
                                    "type": "string",
                                    "description": "Is Phone Verified"
                                },
                                "verify_code": {
                                    "type": "string",
                                    "description": "Verify Code"
                                },
                                "verify_expiration": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Verify Expiration",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_completed_reason": {
                                    "type": "string",
                                    "description": "Not Completed Reason"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNotificationsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "notification_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "notification_hasmany_service_relationship": {
                                    "type": "integer",
                                    "description": "services"
                                },
                                "cat_id": {
                                    "type": "string",
                                    "description": "Cat Id"
                                },
                                "name_task": {
                                    "type": "string",
                                    "description": "Name Task"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Type"
                                },
                                "is_read": {
                                    "type": "string",
                                    "description": "Is Read"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerAddressesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "location": {
                                    "type": "string",
                                    "description": "Location"
                                },
                                "latitude": {
                                    "type": "string",
                                    "description": "Latitude"
                                },
                                "longitude": {
                                    "type": "string",
                                    "description": "Longitude"
                                },
                                "default": {
                                    "type": "string",
                                    "description": "Default"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "address_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "created_by": {
                                    "type": "string",
                                    "description": "Created By"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "created_by": {
                                    "type": "string",
                                    "description": "Created By"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerWalletBalancesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "balance": {
                                    "type": "string",
                                    "description": "Balance"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_by": {
                                    "type": "string",
                                    "description": "Deleted By"
                                },
                                "updated_by": {
                                    "type": "string",
                                    "description": "Updated By"
                                },
                                "created_by": {
                                    "type": "string",
                                    "description": "Created By"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPermissionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "table_name": {
                                    "type": "string",
                                    "description": "Table Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqCategoriesSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "cat_author": {
                                    "type": "string",
                                    "description": "Cat Author"
                                },
                                "num_quest": {
                                    "type": "integer",
                                    "description": "Num Quest"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "logo": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFaqsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "question": {
                                    "type": "string",
                                    "description": "Question"
                                },
                                "q_descript": {
                                    "type": "string",
                                    "description": "Q Descript"
                                },
                                "answer_text": {
                                    "type": "string",
                                    "description": "Answer Text"
                                },
                                "category_id": {
                                    "type": "integer",
                                    "description": "Category Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "faq_belongsto_faq_category_relationship": {
                                    "type": "integer",
                                    "description": "faq_categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerMassmediaSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "link": {
                                    "type": "string",
                                    "description": "Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReportsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_name": {
                                    "type": "string",
                                    "description": "Parent Name"
                                },
                                "category_name": {
                                    "type": "string",
                                    "description": "Category Name"
                                },
                                "count": {
                                    "type": "integer",
                                    "description": "Count"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status"
                                },
                                "report_hasmany_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReportsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_name": {
                                    "type": "string",
                                    "description": "Parent Name"
                                },
                                "category_name": {
                                    "type": "string",
                                    "description": "Category Name"
                                },
                                "count": {
                                    "type": "integer",
                                    "description": "Count"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status"
                                },
                                "report_hasmany_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReportsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "parent_name": {
                                    "type": "string",
                                    "description": "Parent Name"
                                },
                                "category_name": {
                                    "type": "string",
                                    "description": "Category Name"
                                },
                                "count": {
                                    "type": "integer",
                                    "description": "Count"
                                },
                                "amount": {
                                    "type": "integer",
                                    "description": "Amount"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status"
                                },
                                "report_hasmany_category_relationship": {
                                    "type": "integer",
                                    "description": "categories"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRegionsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRegionsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerRegionsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSystemNotificationsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSystemNotificationsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerSystemNotificationsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNewsNotificationsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNewsNotificationsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerNewsNotificationsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Заголовок"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Сообщение"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCompliancesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "compliance_type_id": {
                                    "type": "string",
                                    "description": "Compliance Type Id"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerCustomFieldsValuesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "custom_field_id": {
                                    "type": "string",
                                    "description": "Custom Field Id"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "Value"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerReviewsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "good_bad": {
                                    "type": "string",
                                    "description": "Good Bad"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "reviewer_id": {
                                    "type": "string",
                                    "description": "Reviewer Id"
                                },
                                "as_performer": {
                                    "type": "string",
                                    "description": "As Performer"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "reviewer_name": {
                                    "type": "string",
                                    "description": "Reviewer Name"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserViewsSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersVerifyStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Token"
                                },
                                "sms_otp": {
                                    "type": "string",
                                    "description": "Sms Otp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersVerifyUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Token"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "sms_otp": {
                                    "type": "string",
                                    "description": "Sms Otp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUsersVerifySingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Token"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "sms_otp": {
                                    "type": "string",
                                    "description": "Sms Otp"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerComplianceTypesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerUserExpensesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "client_id": {
                                    "type": "string",
                                    "description": "Client Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "user_expense_belongsto_user_relationship": {
                                    "type": "integer",
                                    "description": "users"
                                },
                                "user_expense_belongsto_task_relationship": {
                                    "type": "integer",
                                    "description": "tasks"
                                },
                                "user_expense_belongsto_user_relationship_1": {
                                    "type": "integer",
                                    "description": "users"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerTaskResponsesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "user_id": {
                                    "type": "string",
                                    "description": "User Id"
                                },
                                "task_id": {
                                    "type": "string",
                                    "description": "Task Id"
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price"
                                },
                                "performer_id": {
                                    "type": "string",
                                    "description": "Performer Id"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "not_free": {
                                    "enum": [
                                        0,
                                        1
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"0\": \"\\u0411\\u0430\\u0441\\u043f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\",\n    \"1\": \"\\u041f\\u043b\\u0430\\u0442\\u043d\\u044b\\u0439 \\u043e\\u0442\\u043a\\u043b\\u0438\\u043a\"\n}"
                                },
                                "deleted_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Deleted At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerBlogNewSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Desc"
                                },
                                "img": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerContentsSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "updated_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Updated At",
                                    "example": "2021-05-17 00:00"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key"
                                },
                                "page": {
                                    "type": "string",
                                    "description": "Page"
                                },
                                "text_uz": {
                                    "type": "string",
                                    "description": "Text Uz"
                                },
                                "text_ru": {
                                    "type": "string",
                                    "description": "Text Ru"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrepareStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "click_trans_id": {
                                    "type": "string",
                                    "description": "Click Trans Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "click_paydoc_id": {
                                    "type": "string",
                                    "description": "Click Paydoc Id"
                                },
                                "merchant_trans_id": {
                                    "type": "string",
                                    "description": "Merchant Trans Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error"
                                },
                                "error_note": {
                                    "type": "string",
                                    "description": "Error Note"
                                },
                                "sign_time": {
                                    "type": "string",
                                    "description": "Sign Time"
                                },
                                "sign_string": {
                                    "type": "string",
                                    "description": "Sign String"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrepareUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "click_trans_id": {
                                    "type": "string",
                                    "description": "Click Trans Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "click_paydoc_id": {
                                    "type": "string",
                                    "description": "Click Paydoc Id"
                                },
                                "merchant_trans_id": {
                                    "type": "string",
                                    "description": "Merchant Trans Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error"
                                },
                                "error_note": {
                                    "type": "string",
                                    "description": "Error Note"
                                },
                                "sign_time": {
                                    "type": "string",
                                    "description": "Sign Time"
                                },
                                "sign_string": {
                                    "type": "string",
                                    "description": "Sign String"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrepareSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "click_trans_id": {
                                    "type": "string",
                                    "description": "Click Trans Id"
                                },
                                "service_id": {
                                    "type": "string",
                                    "description": "Service Id"
                                },
                                "click_paydoc_id": {
                                    "type": "string",
                                    "description": "Click Paydoc Id"
                                },
                                "merchant_trans_id": {
                                    "type": "string",
                                    "description": "Merchant Trans Id"
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "Amount"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "Action"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error"
                                },
                                "error_note": {
                                    "type": "string",
                                    "description": "Error Note"
                                },
                                "sign_time": {
                                    "type": "string",
                                    "description": "Sign Time"
                                },
                                "sign_string": {
                                    "type": "string",
                                    "description": "Sign String"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesStoreRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerPrivaciesSingleUpdateRequest": {
                "content": {
                    "application\/x-www-form-urlencoded": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewStoreRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "VoyagerFooterReviewSingleUpdateRequest": {
                "content": {
                    "multipart\/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "dry-run": {
                                    "type": "boolean",
                                    "description": "Use dry-run only to validate"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name"
                                },
                                "text": {
                                    "type": "string",
                                    "description": "Text"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "jpg,jpeg,png",
                                    "format": "binary"
                                },
                                "created_at": {
                                    "pattern": "\/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2})\/",
                                    "type": "date-time",
                                    "description": "Created At",
                                    "example": "2021-05-17 00:00"
                                },
                                "review_type": {
                                    "enum": [
                                        1,
                                        2
                                    ],
                                    "type": "string",
                                    "description": "{\n    \"1\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0437\\u0430\\u043a\\u0430\\u0437\\u0447\\u0438\\u043a\\u043e\\u0432\",\n    \"2\": \"\\u041e\\u0442\\u0437\\u044b\\u0432\\u044b \\u0438\\u0441\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\"\n}"
                                },
                                "site_link": {
                                    "type": "string",
                                    "description": "Site Link"
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        }
    }
}